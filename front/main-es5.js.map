{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/comment/comment.component.ts","webpack:///src/app/comment/comment.component.html","webpack:///src/app/core/auth/auth.guard.ts","webpack:///src/app/core/auth/auth.service.ts","webpack:///src/app/core/auth/user.service.ts","webpack:///src/app/core/services/body.service.ts","webpack:///src/app/core/services/fetch.service.ts","webpack:///src/app/core/services/form.service.ts","webpack:///src/app/core/services/patch.service.ts","webpack:///src/app/core/validators/validator.ts","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/filter/filter.component.ts","webpack:///src/app/filter/filter.component.html","webpack:///src/app/form-update/form-update.component.ts","webpack:///src/app/form-update/form-update.component.html","webpack:///src/app/form/form.component.ts","webpack:///src/app/form/form.component.html","webpack:///src/app/list/list.component.ts","webpack:///src/app/list/list.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/view/view.component.ts","webpack:///src/app/view/view.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","useHash","imports","AppComponent","authService","translate","router","addLangs","setDefaultLang","browserLang","getBrowserLang","use","match","logout","subscribe","localStorage","removeItem","navigate","isAuthentificated","selector","templateUrl","styleUrls","providers","HttpLoaderFactory","http","AppModule","loader","provide","useFactory","deps","declarations","bootstrap","CommentComponent","fetchService","formService","userService","comments","getId","getComments","getForms","forms","username","userid","comment","text","required","noWhitespace","maxLength","undefined","formid","valid","value","addComment","reset","encapsulation","None","AuthGuard","route","state","providedIn","AuthService","isAuth","user","url","post","get","jwt","UserService","BodyService","vals","formData","name","surname","sex","born","phoneNumber","email","education","prefferedRegion","note","height","Number","parseInt","expectedSalary","workExperience","workExperienceYears","workExperienceMonths","unemployedFor","unemployedForYears","unemployedForMonths","languageSkills","messengers","professions","languages","forEach","element","push","language","languageProficiency","profession","messenger","info","filterData","age","from","ageFrom","to","ageTo","workExperienceFrom","workExperienceYearsFrom","workExperienceMonthsFrom","workExperienceTo","workExperienceYearsTo","workExperienceMonthsTo","heightFrom","heightTo","expectedSalaryFrom","expectedSalaryTo","FetchService","httpOptions","headers","Authorization","form","put","filter","FormService","asObservable","newValue","next","PatchService","fields","patchValue","monthsToYears","controls","el","CustomValidators","control","isWhitespace","trim","length","isValid","whitespace","ErrorComponent","FilterComponent","bodyService","patchService","min","max","trainee","dealer","inspector","manager","pit_boss","waiter","barman","WhatsApp","Telegram","Viber","convertFilterData","filterForms","setForms","setId","resetFilter","filterReset","filterSubmit","FormUpdateComponent","date","Date","english","russian","englishProficiency","russianProficiency","msWhatsApp","msTelegram","msViber","patchData","convertFormData","updateForm","res","submit","FormComponent","addForm","styles","ListComponent","getFormsFromServer","setThisForms","selectForm","deleteForm","LoginComponent","minLength","password","login","error","setItem","token","toString","err","ViewComponent","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormComponent } from './form/form.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ViewComponent } from './view/view.component';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { AuthGuard } from './core/auth/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: FormComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'view', component: ViewComponent,\r\n    canActivate: [AuthGuard]},\r\n  {path: 'error', component: ErrorComponent},\r\n  {path: '**', redirectTo: '/error'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AuthService } from './core/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  providers: [AuthService]\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    public translate: TranslateService,\r\n    private router: Router\r\n    ) {\r\n    translate.addLangs(['en', 'ru']);\r\n    translate.setDefaultLang('en');\r\n    const browserLang = translate.getBrowserLang();\r\n    translate.use(browserLang.match(/en|ru/) ? browserLang : 'ru');\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout()\r\n    .subscribe(\r\n      () => {\r\n      localStorage.removeItem('jwt');\r\n      localStorage.removeItem('username');\r\n      localStorage.removeItem('userid');\r\n      this.router.navigate(['/']);\r\n      });\r\n  }\r\n\r\n  isAuth() {\r\n    if (true === this.authService.isAuthentificated()) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar\">\r\n    <h1>\r\n        <a routerLink=\"/\">HR manager</a>\r\n    </h1>\r\n    <ul>\r\n        <li>\r\n                <select class=\"lang\" #langselect (change)=\"translate.use(langselect.value)\">\r\n                    <option *ngFor=\"let lang of translate.getLangs()\" [value]=\"lang\">{{ lang }}</option>\r\n                </select>\r\n        </li>\r\n        <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\r\n            <a routerLink=\"/\">{{ 'HOME.FORM' | translate }}</a>\r\n        </li>\r\n        <li *ngIf=\"!isAuth()\" routerLinkActive=\"active\">\r\n            <a routerLink=\"/login\">{{ 'HOME.LOGIN' | translate }}</a>\r\n        </li>\r\n        <li *ngIf=\"isAuth()\" routerLinkActive=\"active\">\r\n            <a routerLink=\"/view\">{{ 'HOME.VIEW' | translate }}</a>\r\n        </li>\r\n        <li><button *ngIf=\"isAuth()\" class=\"btn\" (click)=\"logout()\" >{{ 'HOME.LOGOUT' | translate }}</button></li>\r\n    </ul>\r\n  </nav>\r\n  \r\n  <div class=\"container\">\r\n    <div class=\"card\">\r\n  \r\n      <router-outlet></router-outlet>\r\n  \r\n    </div>\r\n  </div>\r\n  ","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormComponent } from './form/form.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { ViewComponent } from './view/view.component';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { CommentComponent } from './comment/comment.component';\r\nimport { FormUpdateComponent } from './form-update/form-update.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { FilterComponent } from './filter/filter.component';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FormComponent,\r\n    ViewComponent,\r\n    LoginComponent,\r\n    ErrorComponent,\r\n    CommentComponent,\r\n    FormUpdateComponent,\r\n    ListComponent,\r\n    FilterComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n    ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Comment } from '../core/interfaces/comment';\r\nimport { CustomValidators } from '../core/validators/validator';\r\nimport { FetchService } from '../core/services/fetch.service';\r\nimport { FormService } from '../core/services/form.service';\r\nimport { UserService } from '../core/auth/user.service';\r\nimport { Form } from '../core/interfaces/form';\r\n\r\n@Component({\r\n  selector: 'app-comment',\r\n  templateUrl: './comment.component.html',\r\n  styleUrls: ['./comment.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [FetchService]\r\n})\r\nexport class CommentComponent implements OnInit {\r\n  id: number | undefined;\r\n  comments: Comment[] = [];\r\n  comment: FormGroup;\r\n  userid: number;\r\n  username: string;\r\n  forms: Form[];\r\n\r\n  constructor(\r\n    private fetchService: FetchService,\r\n    private formService: FormService,\r\n    private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formService.getId().subscribe((id) => {\r\n      this.id = id;\r\n      this.getComments();\r\n    });\r\n    this.formService.getForms().subscribe((forms) => {\r\n      this.forms = forms;\r\n    });\r\n    this.username = localStorage.username;\r\n    this.userid = localStorage.userid;\r\n    this.comment = new FormGroup({\r\n      text: new FormControl('', [\r\n        Validators.required,\r\n        CustomValidators.noWhitespace,\r\n        Validators.maxLength(255)\r\n      ])\r\n    });\r\n  }\r\n\r\n  getComments() {\r\n    if (this.id !== undefined) {\r\n      this.fetchService.getComments(this.forms[this.id].formid)\r\n      .subscribe(comments => {\r\n        this.comments = comments;\r\n      });\r\n    }\r\n  }\r\n\r\n  addComment() {\r\n    if (this.comment.valid && this.id !== undefined) {\r\n      const comment: Comment = {\r\n        comment: this.comment.value.text,\r\n        username: this.username,\r\n        userid: this.userid\r\n      };\r\n      this.fetchService.addComment(this.forms[this.id].formid, comment)\r\n      .subscribe(() => {\r\n        this.getComments();\r\n        this.comment.reset();\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h2>{{ 'COMMENT.TITLE' | translate }}</h2>\r\n    <hr>\r\n    <div class=\"card\" *ngFor=\"let comment of comments; let i = index\" >\r\n        <h3 class=\"name\">{{comment.user.username}}</h3>\r\n        <div class=\"comment\">{{comment.comment}}</div>\r\n    </div>\r\n    <form class=\"card\" [formGroup]=\"comment\" (ngSubmit)=\"addComment()\">\r\n      <label><h3 class=\"name\">{{ username }}</h3></label>\r\n      <div class=\"form-control\">\r\n      <textarea rows=\"7\" name=\"text\" placeholder=\"Note...\" formControlName=\"text\"></textarea>\r\n      <div\r\n      *ngIf=\"comment.get('text').invalid && comment.get('text').touched\"\r\n      class=\"validation\">\r\n      <small *ngIf=\"comment.get('text').errors\">\r\n        {{ 'COMMENT.REQUIRED' | translate }}\r\n      </small>\r\n    </div>\r\n    </div>\r\n      <button class=\"btn\" type=\"submit\" [disabled]=\"comment.invalid || comment.pending\">{{ 'COMMENT.SUBMIT' | translate }}</button>\r\n    </form>\r\n</div>","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivateChild } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ) {}\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ): Observable<boolean> | Promise<boolean> | boolean {\r\n        if (this.authService.isAuthentificated()) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/error']);\r\n        }\r\n    }\r\n\r\n    canActivateChild(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ): Observable<boolean> | Promise<boolean> | boolean {\r\n        return this.canActivate(route, state);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UserInfo } from './interfaces/userInfo';\r\nimport { User } from './interfaces/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n    private isAuth = false;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    login(user: User): Observable<UserInfo> {\r\n        const url = `login`;\r\n        return this.http.post<UserInfo>(url, user);\r\n    }\r\n\r\n    logout(): Observable<{}> {\r\n        const url = `logout`;\r\n        return this.http.get(url);\r\n    }\r\n\r\n    isAuthentificated() {\r\n        if (localStorage.jwt) {\r\n            this.isAuth = true;\r\n            return this.isAuth;\r\n        } else {\r\n            this.isAuth = false;\r\n            return this.isAuth;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserInfo } from './interfaces/userInfo';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private user: UserInfo;\r\n\r\n  getUser(): UserInfo {\r\n    return this.user;\r\n  }\r\n\r\n  setUser(user: UserInfo): void {\r\n    this.user = user;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Form } from '../interfaces/form';\r\nimport { Filter } from '../interfaces/filter';\r\n\r\n@Injectable()\r\nexport class BodyService {\r\n\r\n    convertFormData(vals): Form {\r\n        const formData: Form = {\r\n          name: vals.name as string,\r\n          surname: vals.surname as string,\r\n          sex: vals.sex as string,\r\n          born: vals.born as string,\r\n          phoneNumber: vals.phoneNumber as string,\r\n          email: vals.email as string,\r\n          education: vals.education as string,\r\n          prefferedRegion: vals.prefferedRegion as string,\r\n          note: vals.note as string,\r\n          height: Number.parseInt(vals.height, 10),\r\n          expectedSalary: Number.parseInt(vals.expectedSalary, 10),\r\n          workExperience: Number.parseInt(vals.workExperience.workExperienceYears, 10) * 12 +\r\n          Number.parseInt(vals.workExperience.workExperienceMonths, 10),\r\n          unemployedFor: Number.parseInt(vals.unemployedFor.unemployedForYears, 10) * 12 +\r\n          Number.parseInt(vals.unemployedFor.unemployedForMonths, 10),\r\n          languageSkills: [],\r\n          messengers: [],\r\n          professions: []\r\n        };\r\n\r\n        const languages: string[] = ['english', 'russian'];\r\n        languages.forEach(element => {\r\n            if (vals.languageSkills[element]) {\r\n                formData.languageSkills.push({language: element, languageProficiency: vals.languageSkills[element + 'Proficiency']});\r\n            }\r\n        });\r\n\r\n        const professions: string[] = [\r\n            'trainee',\r\n            'dealer',\r\n            'inspector',\r\n            'manager',\r\n            'pit_boss',\r\n            'waiter',\r\n            'barman'\r\n        ];\r\n        professions.forEach(element => {\r\n            if (vals.professions[element]) {\r\n                formData.professions.push({profession: element});\r\n            }\r\n        });\r\n\r\n        const messengers: string[] = [\r\n            'Telegram',\r\n            'Viber',\r\n            'WhatsApp'\r\n        ];\r\n        messengers.forEach(element => {\r\n            if (vals.messengers['ms' + element]) {\r\n                formData.messengers.push({messenger: element, info: vals.messengers[element]});\r\n              }\r\n        });\r\n\r\n        return formData;\r\n    }\r\n\r\n    convertFilterData(vals): Filter {\r\n\r\n        const filterData: Filter = {\r\n            sex: vals.sex as string,\r\n            education: vals.education as string,\r\n            age: [{from: vals.age.ageFrom, to: vals.age.ageTo }],\r\n            workExperience: [{from: vals.workExperienceFrom.workExperienceYearsFrom * 12 + vals.workExperienceFrom.workExperienceMonthsFrom,\r\n                              to: vals.workExperienceTo.workExperienceYearsTo * 12 + vals.workExperienceTo.workExperienceMonthsTo}],\r\n            height: [{from: vals.height.heightFrom, to: vals.height.heightTo}],\r\n            expectedSalary: [{from: vals.expectedSalary.expectedSalaryFrom, to: vals.expectedSalary.expectedSalaryTo}],\r\n            languageSkills: [{language: vals.languageSkills.language, languageProficiency: vals.languageSkills.languageProficiency}],\r\n            professions: [],\r\n            messengers: [],\r\n        };\r\n\r\n        const professions: string[] = [\r\n            'trainee',\r\n            'dealer',\r\n            'inspector',\r\n            'manager',\r\n            'pit_boss',\r\n            'waiter',\r\n            'barman'\r\n        ];\r\n\r\n        professions.forEach(element => {\r\n            if (vals.professions[element]) {\r\n                filterData.professions.push({profession: element});\r\n              }\r\n        });\r\n\r\n        const messengers: string[] = [\r\n            'Telegram',\r\n            'Viber',\r\n            'WhatsApp'\r\n        ];\r\n\r\n        messengers.forEach(element => {\r\n            if (vals.messengers[element]) {\r\n                filterData.messengers.push({messenger: element});\r\n              }\r\n        });\r\n\r\n        return filterData;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Form } from '../interfaces/form';\r\nimport { Filter } from '../interfaces/filter';\r\nimport { Comment } from '../interfaces/comment';\r\n\r\n@Injectable()\r\nexport class FetchService {\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + localStorage.jwt\r\n        })\r\n      };\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    addForm(form: Form): Observable<Form> {\r\n        return this.http.post<Form>('form', form);\r\n    }\r\n\r\n    getForms(): Observable<Form[]> {\r\n        return this.http.get<Form[]>('forms', this.httpOptions);\r\n    }\r\n\r\n    deleteForm(id: number): Observable<{}> {\r\n        const url = `form/${id}`;\r\n        return this.http.delete(url, this.httpOptions);\r\n    }\r\n\r\n    updateForm(form: Form): Observable<Form[]> {\r\n        const url = `form/${form.formid}`;\r\n        return this.http.put<Form[]>(url, form, this.httpOptions);\r\n    }\r\n\r\n    filterForms(filter: Filter): Observable<Form[]> {\r\n        const url = `forms`;\r\n        return this.http.post<Form[]>(url, filter, this.httpOptions);\r\n    }\r\n\r\n    getComments(formid: number): Observable<Comment[]> {\r\n        const url = `form/${formid}/comment/`;\r\n        return this.http.get<Comment[]>(url, this.httpOptions);\r\n    }\r\n\r\n    addComment(formid: number, comment: Comment): Observable<Comment[]> {\r\n        const url = `form/${formid}/comment/`;\r\n        return this.http.post<Comment[]>(url, comment, this.httpOptions);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Form } from '../interfaces/form';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormService {\r\n\r\n  private forms: BehaviorSubject<Form[]>;\r\n  private id: BehaviorSubject<number | undefined>;\r\n\r\n  constructor() {\r\n    this.forms = new BehaviorSubject<Form[]>([]);\r\n    this.id = new BehaviorSubject<number | undefined>(undefined);\r\n  }\r\n\r\n  getForms(): Observable<Form[]> {\r\n    return this.forms.asObservable();\r\n  }\r\n\r\n  setForms(newValue): void {\r\n    this.forms.next(newValue);\r\n  }\r\n\r\n  getId(): Observable<number | undefined> {\r\n    return this.id.asObservable();\r\n  }\r\n\r\n  setId(id: number | undefined): void {\r\n    this.id.next(id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Form } from '../interfaces/form';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nconst professions = [\r\n  'trainee',\r\n  'dealer',\r\n  'inspector',\r\n  'manager',\r\n  'pit_boss',\r\n  'waiter',\r\n  'barman'\r\n];\r\n\r\nconst messengers = [\r\n  'Telegram',\r\n  'Viber',\r\n  'WhatsApp'\r\n];\r\n\r\n@Injectable()\r\nexport class PatchService {\r\n\r\n  patchData(id: number, form: FormGroup, forms: Form[]) {\r\n      const fields: string[] = [\r\n          'name',\r\n          'surname',\r\n          'sex',\r\n          'born',\r\n          'height',\r\n          'phoneNumber',\r\n          'email',\r\n          'education',\r\n          'prefferedRegion',\r\n          'note',\r\n          'expectedSalary'\r\n        ];\r\n      fields.forEach(element => {\r\n          form.patchValue({[element]: forms[id][element]});\r\n        });\r\n      const monthsToYears: string[] = [\r\n          'workExperience',\r\n          'unemployedFor'\r\n        ];\r\n      monthsToYears.forEach(element => {\r\n            form.controls[element].patchValue({\r\n                [element + 'Years']: (forms[id][element] - (forms[id][element] % 12)) / 12,\r\n                [element + 'Months']: forms[id][element] % 12,\r\n              });\r\n        });\r\n      forms[id].messengers.forEach(element => {\r\n          messengers.forEach(el => {\r\n            if (element.messenger === el) {\r\n              form.controls.messengers.patchValue({\r\n                ['ms' + el]: true,\r\n                [el]: element.info\r\n              });\r\n            }\r\n          });\r\n        });\r\n      forms[id].languageSkills.forEach(element => {\r\n          ['enlish', 'russian'].forEach(el => {\r\n            if (element.language === el) {\r\n              form.controls.languageSkills.patchValue({\r\n                [el]: true,\r\n                [el + 'Proficiency']: element.languageProficiency\r\n              });\r\n            }\r\n          });\r\n        });\r\n      forms[id].professions.forEach(element => {\r\n          professions.forEach(el => {\r\n            if (element.profession === el) {\r\n              form.controls.professions.patchValue({\r\n                [el]: true,\r\n              });\r\n            }\r\n          });\r\n        });\r\n  }\r\n\r\n  resetFilter(filter: FormGroup) {\r\n    filter.patchValue({\r\n      sex: 'male',\r\n      education: 'higher'\r\n    });\r\n    professions.forEach(el => {\r\n        filter.controls.professions.patchValue({\r\n        [el]: false\r\n      });\r\n    });\r\n    messengers.forEach(el => {\r\n        filter.controls.messengers.patchValue({\r\n        [el]: false\r\n      });\r\n    });\r\n    filter.controls.languageSkills.patchValue({\r\n      language: 'russian',\r\n      languageProficiency: 'native'\r\n    });\r\n    filter.controls.expectedSalary.patchValue({\r\n      expectedSalaryFrom: 1,\r\n      expectedSalaryTo: 100000\r\n    });\r\n    filter.controls.age.patchValue({\r\n      ageFrom: 14,\r\n      ageTo: 100\r\n    });\r\n    filter.controls.height.patchValue({\r\n      heightFrom: 30,\r\n      heightTo: 300\r\n    });\r\n    filter.controls.workExperienceFrom.patchValue({\r\n      workExperienceYearsFrom: 0,\r\n      workExperienceMonthsFrom: 0\r\n    });\r\n    filter.controls.workExperienceTo.patchValue({\r\n      workExperienceYearsTo: 100,\r\n      workExperienceMonthsTo: 11\r\n    });\r\n  }\r\n}\r\n","import { FormControl } from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n    static noWhitespace(control: FormControl) {\r\n        const isWhitespace = (control.value || '').trim().length === 0;\r\n        const isValid = !isWhitespace;\r\n        return isValid ? null : { whitespace: true };\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.scss']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>Error 404</h1>\r\n<h3>Page not found</h3>\r\n<button class=\"btn\" style=\"padding: 0,5rem; \"><a style=\"color: white;\" routerLink=\"/\">Home page</a></button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { BodyService } from '../core/services/body.service';\r\nimport { FetchService } from '../core/services/fetch.service';\r\nimport { FormService } from '../core/services/form.service';\r\nimport { Filter } from '../core/interfaces/filter';\r\nimport { Form } from '../core/interfaces/form';\r\nimport { PatchService } from '../core/services/patch.service';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: ['./filter.component.scss'],\r\n  providers: [BodyService, FetchService, PatchService]\r\n})\r\nexport class FilterComponent implements OnInit {\r\n  filter: FormGroup;\r\n  forms: Form[] = [];\r\n\r\n  constructor(\r\n    private bodyService: BodyService,\r\n    private fetchService: FetchService,\r\n    private formService: FormService,\r\n    private patchService: PatchService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.filter = new FormGroup({\r\n      sex: new FormControl('male', ),\r\n      height: new FormGroup({\r\n        heightFrom: new FormControl(30, [\r\n          Validators.min(30),\r\n          Validators.max(300),\r\n          Validators.required\r\n        ]),\r\n        heightTo: new FormControl(300, [\r\n          Validators.min(30),\r\n          Validators.max(300),\r\n          Validators.required\r\n        ])\r\n      }),\r\n      age: new FormGroup({\r\n        ageFrom: new FormControl(14, [\r\n          Validators.min(14),\r\n          Validators.max(100),\r\n          Validators.required\r\n        ]),\r\n        ageTo: new FormControl(100, [\r\n          Validators.min(14),\r\n          Validators.max(100),\r\n          Validators.required\r\n        ])\r\n      }),\r\n      workExperienceFrom: new FormGroup({\r\n        workExperienceYearsFrom: new FormControl(0, [\r\n          Validators.min(0),\r\n          Validators.max(100),\r\n          Validators.required\r\n        ]),\r\n        workExperienceMonthsFrom: new FormControl(0, [\r\n          Validators.min(0),\r\n          Validators.max(11),\r\n          Validators.required\r\n        ]),\r\n      }),\r\n      workExperienceTo: new FormGroup({\r\n        workExperienceYearsTo: new FormControl(100, [\r\n          Validators.min(0),\r\n          Validators.max(100),\r\n          Validators.required\r\n        ]),\r\n        workExperienceMonthsTo: new FormControl(11, [\r\n          Validators.min(0),\r\n          Validators.max(11),\r\n          Validators.required\r\n        ]),\r\n      }),\r\n      education: new FormControl('higher'),\r\n      expectedSalary: new FormGroup({\r\n        expectedSalaryFrom: new FormControl(1, [\r\n          Validators.min(1),\r\n          Validators.max(100000),\r\n          Validators.required\r\n        ]),\r\n        expectedSalaryTo: new FormControl(100000, [\r\n          Validators.min(1),\r\n          Validators.max(100000),\r\n          Validators.required\r\n        ]),\r\n      }),\r\n      professions: new FormGroup({\r\n        trainee: new FormControl(),\r\n        dealer: new FormControl(),\r\n        inspector: new FormControl(),\r\n        manager: new FormControl(),\r\n        pit_boss: new FormControl(),\r\n        waiter: new FormControl(),\r\n        barman: new FormControl(),\r\n      }),\r\n      messengers: new FormGroup({\r\n        WhatsApp: new FormControl(),\r\n        Telegram: new FormControl(),\r\n        Viber: new FormControl(),\r\n      }),\r\n      languageSkills: new FormGroup({\r\n        language: new FormControl('russian'),\r\n        languageProficiency: new FormControl('native'),\r\n      }),\r\n    });\r\n  }\r\n\r\n  filterSubmit() {\r\n    if (this.filter.valid) {\r\n      const filterData: Filter = this.bodyService.convertFilterData({...this.filter.value});\r\n      this.fetchService.filterForms(filterData).subscribe(forms => {\r\n          this.formService.setForms(forms);\r\n          this.formService.setId(undefined);\r\n      });\r\n    }\r\n  }\r\n\r\n  filterReset(): void {\r\n    this.patchService.resetFilter(this.filter);\r\n    this.fetchService.getForms().subscribe(forms => {\r\n      this.formService.setForms(forms);\r\n    });\r\n    this.formService.setId(undefined);\r\n  }\r\n}\r\n","<div class=\"container filter\">\r\n  <div class=\"filter-header\">\r\n    <h2>{{ 'FILTER.TITLE' | translate }}</h2>\r\n    <button class=\"btn\" [disabled]=\"!filter.dirty\" (click)=\"filterReset()\">{{ 'FILTER.RESET' | translate }}</button>\r\n  </div>\r\n    <hr>\r\n    \r\n    <form class=\"card\" [formGroup]=\"filter\" (ngSubmit)=\"filterSubmit()\">\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FILTER.SEX.TITLE' | translate }}</label>\r\n        <select name=\"sex\" formControlName=\"sex\">\r\n          <option value=\"male\">{{ 'FILTER.SEX.MALE' | translate }}</option>\r\n          <option value=\"female\">{{ 'FILTER.SEX.FEMALE' | translate }}</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"card\" formGroupName=\"age\">\r\n        <label>{{ 'FILTER.AGE.TITLE' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FILTER.FROM' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"14\" max=\"100\" name=\"ageFrom\" formControlName=\"ageFrom\">\r\n          <div\r\n          *ngIf=\"filter.controls.age.get('ageFrom').invalid \r\n            && filter.controls.age.get('ageFrom').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"filter.controls.age.get('ageFrom').errors.max\">\r\n            {{ 'FILTER.AGE.MAX' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.age.get('ageFrom').errors.min\">\r\n            {{ 'FILTER.AGE.MIN' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.age.get('ageFrom').errors.required\">\r\n            {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FILTER.TO' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"14\" max=\"100\" name=\"ageTo\" formControlName=\"ageTo\">\r\n          <div\r\n          *ngIf=\"filter.controls.age.get('ageTo').invalid \r\n            && filter.controls.age.get('ageTo').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"filter.controls.age.get('ageTo').errors.max\">\r\n            {{ 'FILTER.AGE.MAX' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.age.get('ageTo').errors.min\">\r\n            {{ 'FILTER.AGE.MIN' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.age.get('ageTo').errors.required\">\r\n            {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\" formGroupName=\"height\">\r\n        <label>{{ 'FILTER.HEIGHT.TITLE' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FILTER.FROM' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"30\" max=\"300\" name=\"heightFrom\" formControlName=\"heightFrom\">\r\n          <div\r\n          *ngIf=\"filter.controls.height.get('heightFrom').invalid \r\n            && filter.controls.height.get('heightFrom').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"filter.controls.height.get('heightFrom').errors.max\">\r\n            {{ 'FILTER.HEIGHT.MAX' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.height.get('heightFrom').errors.min\">\r\n            {{ 'FILTER.HEIGHT.MIN' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.height.get('heightFrom').errors.required\">\r\n            {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FILTER.TO' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"30\" max=\"300\" name=\"heightTo\" formControlName=\"heightTo\">\r\n          <div\r\n          *ngIf=\"filter.controls.height.get('heightTo').invalid \r\n            && filter.controls.height.get('heightTo').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"filter.controls.height.get('heightTo').errors.max\">\r\n            {{ 'FILTER.HEIGHT.MAX' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.height.get('heightTo').errors.min\">\r\n            {{ 'FILTER.HEIGHT.MIN' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.height.get('heightTo').errors.required\">\r\n            {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\" formGroupName=\"expectedSalary\">\r\n        <label>{{ 'FILTER.EXPECTED_SALARY.TITLE' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FILTER.FROM' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"1\" max=\"100000\" name=\"expectedSalaryFrom\" formControlName=\"expectedSalaryFrom\">\r\n          <div\r\n          *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryFrom').invalid \r\n            && filter.controls.expectedSalary.get('expectedSalaryFrom').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryFrom').errors.max\">\r\n            {{ 'FILTER.EXPECTED_SALARY.MAX' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryFrom').errors.min\">\r\n            {{ 'FILTER.EXPECTED_SALARY.MIN' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryFrom').errors.required\">\r\n            {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FILTER.TO' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"1\" max=\"100000\" name=\"expectedSalaryTo\" formControlName=\"expectedSalaryTo\">\r\n          <div\r\n          *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryTo').invalid \r\n            && filter.controls.expectedSalary.get('expectedSalaryTo').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryTo').errors.max\">\r\n            {{ 'FILTER.EXPECTED_SALARY.MAX' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryTo').errors.min\">\r\n            {{ 'FILTER.EXPECTED_SALARY.MIN' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryTo').errors.required\">\r\n            {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"form-control\">\r\n        <label>{{ 'FILTER.EDUCATION.TITLE' | translate }}</label>\r\n        <select name=\"education\" formControlName=\"education\">\r\n          <option value=\"primary\">{{ 'FILTER.EDUCATION.PRIMARY' | translate }}</option>\r\n          <option value=\"secondary\">{{ 'FILTER.EDUCATION.SECONDARY' | translate }}</option>\r\n          <option value=\"unfinished_higher\">{{ 'FILTER.EDUCATION.UNFINISHED_HIGHER' | translate }}</option>\r\n          <option value=\"higher\">{{ 'FILTER.EDUCATION.HIGHER' | translate }}</option>\r\n        </select>\r\n      </div>\r\n\r\n     <div class=\"card\" formGroupName=\"professions\">\r\n      <label>{{ 'FILTER.PROFESSIONS.TITLE' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"trainee\" formControlName=\"trainee\">{{ 'FILTER.PROFESSIONS.TRAINEE' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"dealer\" formControlName=\"dealer\">{{ 'FILTER.PROFESSIONS.DEALER' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"inspector\" formControlName=\"inspector\">{{ 'FILTER.PROFESSIONS.INSPECTOR' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"manager\" formControlName=\"manager\">{{ 'FILTER.PROFESSIONS.MANAGER' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"pit_boss\" formControlName=\"pit_boss\">{{ 'FILTER.PROFESSIONS.PIT_BOSS' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"waiter\" formControlName=\"waiter\">{{ 'FILTER.PROFESSIONS.WAITER' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"barman\" formControlName=\"barman\">{{ 'FILTER.PROFESSIONS.BARMAN' | translate }}</label>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card\" formGroupName=\"messengers\">\r\n      <label>{{ 'FILTER.MESSENGERS.TITLE' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"Telegram\" formControlName=\"Telegram\">{{ 'FILTER.MESSENGERS.TELEGRAM' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"Viber\" formControlName=\"Viber\">{{ 'FILTER.MESSENGERS.VIBER' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"WhatsApp\" formControlName=\"WhatsApp\">{{ 'FILTER.MESSENGERS.WHATS_APP' | translate }}</label>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card\" formGroupName=\"languageSkills\">\r\n      <label>{{ 'FILTER.LANGUAGE_SKILLS' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FILTER.LANGUAGES.TITLE' | translate }}</label>\r\n        <select name=\"language\" formControlName=\"language\">\r\n          <option value=\"english\">{{ 'FILTER.LANGUAGES.ENGLISH' | translate }}</option>\r\n          <option value=\"russian\">{{ 'FILTER.LANGUAGES.RUSSIAN' | translate }}</option>\r\n        </select>\r\n        <label>{{ 'FILTER.LANGUAGE_PROFICIENCY.TITLE' | translate }}</label>\r\n        <select name=\"languageProficiency\" formControlName=\"languageProficiency\">\r\n          <option value=\"basic\">{{ 'FILTER.LANGUAGE_PROFICIENCY.BASIC' | translate }}</option>\r\n          <option value=\"intermediate\">{{ 'FILTER.LANGUAGE_PROFICIENCY.INTERMEDIATE' | translate }}</option>\r\n          <option value=\"fluent\">{{ 'FILTER.LANGUAGE_PROFICIENCY.FLUENT' | translate }}</option>\r\n          <option value=\"native\">{{ 'FILTER.LANGUAGE_PROFICIENCY.NATIVE' | translate }}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n      \r\n    <div class=\"card\" formGroupName=\"workExperienceFrom\">\r\n      <label>{{ 'FILTER.WORK_EXPERIENCE_FROM' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FILTER.YEARS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"100\" name=\"workExperienceYearsFrom\" formControlName=\"workExperienceYearsFrom\">\r\n        <div\r\n        *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceYearsFrom').invalid \r\n          && filter.controls.workExperienceFrom.get('workExperienceYearsFrom').touched\"\r\n          class=\"validation\">\r\n        <small *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceYearsFrom').errors.max\">\r\n          {{ 'FILTER.VALIDATORS.YEARS' | translate }}\r\n        </small>\r\n        <small *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceYearsFrom').errors.min\">\r\n          {{ 'FILTER.VALIDATORS.POSITIVE' | translate }}\r\n        </small>\r\n        <small *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceYearsFrom').errors.required\">\r\n          {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n      </div>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FILTER.MONTHS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"11\" name=\"workExperienceMonthsFrom\" formControlName=\"workExperienceMonthsFrom\">\r\n        <div\r\n        *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceMonthsFrom').invalid \r\n          && filter.controls.workExperienceFrom.get('workExperienceMonthsFrom').touched\"\r\n        class=\"validation\">\r\n      <small *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceMonthsFrom').errors.max\">\r\n        {{ 'FILTER.VALIDATORS.MONTHS' | translate }}\r\n      </small>\r\n      <small *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceMonthsFrom').errors.min\">\r\n        {{ 'FILTER.VALIDATORS.POSITIVE' | translate }}\r\n      </small>\r\n      <small *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceMonthsFrom').errors.required\">\r\n        {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n      </small>\r\n    </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card\" formGroupName=\"workExperienceTo\">\r\n      <label>{{ 'FILTER.WORK_EXPERIENCE_TO' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FILTER.YEARS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"100\" name=\"workExperienceYearsTo\" formControlName=\"workExperienceYearsTo\">\r\n        <div\r\n        *ngIf=\"filter.controls.workExperienceTo.get('workExperienceYearsTo').invalid \r\n          && filter.controls.workExperienceTo.get('workExperienceYearsTo').touched\"\r\n          class=\"validation\">\r\n        <small *ngIf=\"filter.controls.workExperienceTo.get('workExperienceYearsTo').errors.max\">\r\n          {{ 'FILTER.VALIDATORS.YEARS' | translate }}\r\n        </small>\r\n        <small *ngIf=\"filter.controls.workExperienceTo.get('workExperienceYearsTo').errors.min\">\r\n          {{ 'FILTER.VALIDATORS.POSITIVE' | translate }}\r\n        </small>\r\n        <small *ngIf=\"filter.controls.workExperienceTo.get('workExperienceYearsTo').errors.required\">\r\n          {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n      </div>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FILTER.MONTHS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"11\" name=\"workExperienceMonthsTo\" formControlName=\"workExperienceMonthsTo\">\r\n        <div\r\n        *ngIf=\"filter.controls.workExperienceTo.get('workExperienceMonthsTo').invalid \r\n          && filter.controls.workExperienceTo.get('workExperienceMonthsTo').touched\"\r\n        class=\"validation\">\r\n      <small *ngIf=\"filter.controls.workExperienceTo.get('workExperienceMonthsTo').errors.max\">\r\n        {{ 'FILTER.VALIDATORS.MONTHS' | translate }}\r\n      </small>\r\n      <small *ngIf=\"filter.controls.workExperienceTo.get('workExperienceMonthsTo').errors.min\">\r\n        {{ 'FILTER.VALIDATORS.POSITIVE' | translate }}\r\n      </small>\r\n      <small *ngIf=\"filter.controls.workExperienceTo.get('workExperienceMonthsTo').errors.required\">\r\n        {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n      </small>\r\n    </div>\r\n      </div>\r\n    </div>\r\n\r\n      <button class=\"btn\" type=\"submit\" [disabled]=\"filter.invalid || filter.pending\">{{ 'FILTER.SUBMIT' | translate }}</button>\r\n    </form>\r\n  </div>  ","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomValidators } from '../core/validators/validator';\r\nimport { BodyService } from '../core/services/body.service';\r\nimport { FetchService } from '../core/services/fetch.service';\r\nimport { PatchService } from '../core/services/patch.service';\r\nimport { FormService } from '../core/services/form.service';\r\nimport { Form } from '../core/interfaces/form';\r\n\r\n@Component({\r\n  selector: 'app-form-update',\r\n  templateUrl: './form-update.component.html',\r\n  styleUrls: ['./form-update.component.scss'],\r\n  providers: [BodyService, FetchService, PatchService]\r\n})\r\nexport class FormUpdateComponent implements OnInit {\r\n  forms: Form[];\r\n  form: FormGroup;\r\n  date: Date;\r\n  id: number | undefined;\r\n\r\n  constructor(\r\n    private bodyService: BodyService,\r\n    private fetchService: FetchService,\r\n    private patchService: PatchService,\r\n    private formService: FormService) { }\r\n\r\n    ngOnInit(): void {\r\n      this.date = new Date();\r\n      this.form = new FormGroup({\r\n        name: new FormControl('', [\r\n          Validators.required,\r\n          CustomValidators.noWhitespace\r\n        ]),\r\n        surname: new FormControl('', [\r\n          Validators.required,\r\n          CustomValidators.noWhitespace\r\n        ]),\r\n        sex: new FormControl('male', ),\r\n        born: new FormControl('', [\r\n          Validators.required]),\r\n        height: new FormControl(0, [\r\n          Validators.min(30),\r\n          Validators.max(300),\r\n          Validators.required\r\n        ]),\r\n        phoneNumber: new FormControl('', [\r\n          Validators.required,\r\n          CustomValidators.noWhitespace\r\n        ]),\r\n        email: new FormControl('', [\r\n          Validators.email,\r\n          Validators.required]),\r\n        education: new FormControl('higher'),\r\n        prefferedRegion: new FormControl(''),\r\n        expectedSalary: new FormControl(0, [\r\n          Validators.min(1),\r\n        ]),\r\n        unemployedFor: new FormGroup({\r\n          unemployedForYears: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(100),\r\n            Validators.required\r\n          ]),\r\n          unemployedForMonths: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(11),\r\n            Validators.required\r\n          ])\r\n        }),\r\n        workExperience: new FormGroup({\r\n          workExperienceYears: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(100),\r\n            Validators.required\r\n          ]),\r\n          workExperienceMonths: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(11),\r\n            Validators.required\r\n          ]),\r\n        }),\r\n        note: new FormControl(''),\r\n        languageSkills: new FormGroup({\r\n          english: new FormControl(),\r\n          russian: new FormControl(),\r\n          englishProficiency: new FormControl('basic'),\r\n          russianProficiency: new FormControl('basic')\r\n        }),\r\n        professions: new FormGroup({\r\n          trainee: new FormControl(),\r\n          dealer: new FormControl(),\r\n          inspector: new FormControl(),\r\n          manager: new FormControl(),\r\n          pit_boss: new FormControl(),\r\n          waiter: new FormControl(),\r\n          barman: new FormControl(),\r\n        }),\r\n        messengers: new FormGroup({\r\n          WhatsApp: new FormControl(),\r\n          Telegram: new FormControl(),\r\n          Viber: new FormControl(),\r\n          msWhatsApp: new FormControl(),\r\n          msTelegram: new FormControl(),\r\n          msViber: new FormControl(),\r\n        })\r\n      });\r\n      this.formService.getForms().subscribe((forms) => {\r\n        this.forms = forms;\r\n      });\r\n      this.formService.getId().subscribe((id) => {\r\n        this.id = id;\r\n        if (id !== undefined) {\r\n          this.patchService.patchData(id, this.form, this.forms);\r\n        } else {\r\n          this.form.reset();\r\n        }\r\n      });\r\n    }\r\n\r\n    submit() {\r\n      if (this.form.valid) {\r\n        const formData = this.bodyService.convertFormData({...this.form.value});\r\n        formData.formid = this.forms[this.id].formid;\r\n        this.fetchService.updateForm(formData).subscribe((res) => {\r\n          this.forms[this.id] = res[0];\r\n          this.formService.setForms(this.forms);\r\n          this.formService.setId(this.id);\r\n        });\r\n        this.form.reset();\r\n      }\r\n    }\r\n}\r\n","<div class=\"container form-data\">\r\n    <h2>{{ 'FORM.TITLE' | translate }}</h2>\r\n        <hr>\r\n   <form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.NAME' | translate }}</label>\r\n      <input type=\"text\" name=\"name\" placeholder=\"Name\" formControlName=\"name\">\r\n      <div\r\n        *ngIf=\"form.get('name').invalid && form.get('name').touched\"\r\n        class=\"validation\">\r\n        <small *ngIf=\"form.get('name').errors\">\r\n          {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.SURNAME' | translate }}</label>\r\n      <input type=\"text\" name=\"surname\" placeholder=\"Surname\" formControlName=\"surname\">\r\n      <div\r\n        *ngIf=\"form.get('surname').invalid && form.get('surname').touched\"\r\n        class=\"validation\">\r\n        <small *ngIf=\"form.get('surname').errors\">\r\n          {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.SEX.TITLE' | translate }}</label>\r\n      <select name=\"sex\" formControlName=\"sex\">\r\n        <option value=\"male\">{{ 'FORM.SEX.MALE' | translate }}</option>\r\n        <option value=\"female\">{{ 'FORM.SEX.FEMALE' | translate }}</option>\r\n      </select>\r\n    </div>\r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.BORN' | translate }}</label>\r\n      <input type=\"date\" name=\"born\" max=\"{{date | date:'yyyy-MM-dd'}}\" formControlName=\"born\">\r\n      <div\r\n        *ngIf=\"form.get('born').invalid && form.get('born').touched\"\r\n        class=\"validation\">\r\n        <small *ngIf=\"form.get('born').errors.required\">\r\n          {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n    </div>   \r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.HEIGHT.TITLE' | translate }}</label>\r\n      <input type=\"number\"  name=\"height\" min=\"30\" max=\"300\" formControlName=\"height\">\r\n      <div\r\n        *ngIf=\"form.get('height').invalid && form.get('height').touched\"\r\n        class=\"validation\">\r\n        <small *ngIf=\"form.get('height').errors.min\">\r\n          {{ 'FORM.HEIGHT.MIN' | translate }}\r\n        </small>\r\n        <small *ngIf=\"form.get('height').errors.max\">\r\n          {{ 'FORM.HEIGHT.MAX' | translate }}\r\n        </small>\r\n        <small *ngIf=\"form.get('height').errors.required\">\r\n          {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.PHONE_NUMBER' | translate }}</label>\r\n      <input type=\"text\" name=\"phoneNumber\" formControlName=\"phoneNumber\">\r\n      <div\r\n        *ngIf=\"form.get('phoneNumber').invalid && form.get('phoneNumber').touched\"\r\n        class=\"validation\">\r\n        <small *ngIf=\"form.get('phoneNumber').errors\">\r\n          {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n    </div>\r\n     \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.EMAIL' | translate }}</label>\r\n      <input type=\"text\" name=\"email\" placeholder=\"Email\" formControlName=\"email\">\r\n      <div\r\n        *ngIf=\"form.get('email').invalid && form.get('email').touched\"\r\n        class=\"validation\">\r\n        <small *ngIf=\"form.get('email').errors.required\">\r\n          {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n        <small *ngIf=\"form.get('email').errors.email\">\r\n          {{ 'FORM.VALIDATORS.EMAIL' | translate }}\r\n        </small>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.EDUCATION.TITLE' | translate }}</label>\r\n      <select name=\"education\" formControlName=\"education\">\r\n        <option value=\"primary\">{{ 'FORM.EDUCATION.PRIMARY' | translate }}</option>\r\n        <option value=\"secondary\">{{ 'FORM.EDUCATION.SECONDARY' | translate }}</option>\r\n        <option value=\"unfinished_higher\">{{ 'FORM.EDUCATION.UNFINISHED_HIGHER' | translate }}</option>\r\n        <option value=\"higher\">{{ 'FORM.EDUCATION.HIGHER' | translate }}</option>\r\n      </select>\r\n    </div>\r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.EXPECTED_SALARY' | translate }}</label>\r\n      <input type=\"number\" name=\"expectedSalary\" min=\"1\" formControlName=\"expectedSalary\">\r\n      <div\r\n        *ngIf=\"form.get('expectedSalary').invalid && form.get('expectedSalary').touched\"\r\n        class=\"validation\">\r\n        <small *ngIf=\"form.get('expectedSalary').errors.min\">\r\n          {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n        </small>\r\n        <small *ngIf=\"form.get('expectedSalary').errors.required\">\r\n          {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n    </div> \r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.PREFFERED_REGION' | translate }}</label>\r\n      <input type=\"text\" name=\"prefferedRegion\" formControlName=\"prefferedRegion\">\r\n    </div>\r\n   \r\n    <div class=\"card\" formGroupName=\"workExperience\">\r\n      <label>{{ 'FORM.WORK_EXPERIENCE' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FORM.YEARS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"100\" name=\"workExperienceYears\" formControlName=\"workExperienceYears\">\r\n        <div\r\n          *ngIf=\"form.controls.workExperience.get('workExperienceYears').invalid \r\n            && form.controls.workExperience.get('workExperienceYears').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"form.controls.workExperience.get('workExperienceYears').errors.max\">\r\n            {{ 'FORM.VALIDATORS.YEARS' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.workExperience.get('workExperienceYears').errors.min\">\r\n            {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.workExperience.get('workExperienceYears').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FORM.MONTHS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"11\" name=\"workExperienceMonths\" formControlName=\"workExperienceMonths\">\r\n        <div\r\n            *ngIf=\"form.controls.workExperience.get('workExperienceMonths').invalid \r\n              && form.controls.workExperience.get('workExperienceMonths').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"form.controls.workExperience.get('workExperienceMonths').errors.max\">\r\n            {{ 'FORM.VALIDATORS.MONTHS' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.workExperience.get('workExperienceMonths').errors.min\">\r\n            {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.workExperience.get('workExperienceMonths').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   \r\n     <div class=\"card\" formGroupName=\"unemployedFor\">\r\n      <label>{{ 'FORM.UNEMPLOYED_FOR' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FORM.YEARS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"100\" name=\"unemployedForYears\" formControlName=\"unemployedForYears\">\r\n          <div\r\n          *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').invalid \r\n            && form.controls.unemployedFor.get('unemployedForYears').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').errors.max\">\r\n            {{ 'FORM.VALIDATORS.YEARS' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').errors.min\">\r\n            {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FORM.MONTHS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"11\" name=\"unemployedForMonths\" formControlName=\"unemployedForMonths\">\r\n        <div\r\n            *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').invalid \r\n              && form.controls.unemployedFor.get('unemployedForMonths').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').errors.max\">\r\n            {{ 'FORM.VALIDATORS.MONTHS' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').errors.min\">\r\n            {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"card\" formGroupName=\"languageSkills\">\r\n      <label>{{ 'FORM.LANGUAGE_SKILLS' | translate }}</label>\r\n   \r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"english\" formControlName=\"english\">{{ 'FORM.LANGUAGES.ENGLISH' | translate }}</label>\r\n        <select name=\"englishProficiency\" formControlName=\"englishProficiency\">\r\n          <option value=\"basic\">{{ 'FORM.LANGUAGE_PROFICIENCY.BASIC' | translate }}</option>\r\n          <option value=\"intermediate\">{{ 'FORM.LANGUAGE_PROFICIENCY.INTERMEDIATE' | translate }}</option>\r\n          <option value=\"fluent\">{{ 'FORM.LANGUAGE_PROFICIENCY.FLUENT' | translate }}</option>\r\n          <option value=\"native\">{{ 'FORM.LANGUAGE_PROFICIENCY.NATIVE' | translate }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"russian\" formControlName=\"russian\">{{ 'FORM.LANGUAGES.RUSSIAN' | translate }}</label>\r\n        <select name=\"russianProficiency\" formControlName=\"russianProficiency\">\r\n          <option value=\"basic\">{{ 'FORM.LANGUAGE_PROFICIENCY.BASIC' | translate }}</option>\r\n          <option value=\"intermediate\">{{ 'FORM.LANGUAGE_PROFICIENCY.INTERMEDIATE' | translate }}</option>\r\n          <option value=\"fluent\">{{ 'FORM.LANGUAGE_PROFICIENCY.FLUENT' | translate }}</option>\r\n          <option value=\"native\">{{ 'FORM.LANGUAGE_PROFICIENCY.NATIVE' | translate }}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"card\" formGroupName=\"professions\">\r\n      <label>{{ 'FORM.PROFESSIONS.TITLE' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"trainee\" formControlName=\"trainee\">{{ 'FORM.PROFESSIONS.TRAINEE' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"dealer\" formControlName=\"dealer\">{{ 'FORM.PROFESSIONS.DEALER' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"inspector\" formControlName=\"inspector\">{{ 'FORM.PROFESSIONS.INSPECTOR' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"manager\" formControlName=\"manager\">{{ 'FORM.PROFESSIONS.MANAGER' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"pit_boss\" formControlName=\"pit_boss\">{{ 'FORM.PROFESSIONS.PIT_BOSS' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"waiter\" formControlName=\"waiter\">{{ 'FORM.PROFESSIONS.WAITER' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"barman\" formControlName=\"barman\">{{ 'FORM.PROFESSIONS.BARMAN' | translate }}</label>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"card\" formGroupName=\"messengers\">\r\n      <label>{{ 'FORM.MESSENGERS.TITLE' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"Telegram\" formControlName=\"msTelegram\">{{ 'FORM.MESSENGERS.TELEGRAM' | translate }}</label>\r\n        <input type=\"text\" name=\"Telegram\" formControlName=\"Telegram\">\r\n      </div>\r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"msWhatsApp\" formControlName=\"msWhatsApp\">{{ 'FORM.MESSENGERS.WHATS_APP' | translate }}</label>\r\n        <input type=\"text\" name=\"WhatsApp\" formControlName=\"WhatsApp\">\r\n      </div>\r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"msViber\" formControlName=\"msViber\">{{ 'FORM.MESSENGERS.VIBER' | translate }}</label>\r\n        <input type=\"text\" name=\"Viber\" formControlName=\"Viber\">\r\n      </div>\r\n    </div>\r\n   \r\n    <textarea rows=\"5\" name=\"note\" placeholder=\"Note...\" formControlName=\"note\"></textarea>\r\n   \r\n    <button class=\"btn\" type=\"submit\" [disabled]=\"form.invalid || form.pending\">{{ 'FORM.SUBMIT' | translate }}</button>\r\n  </form>\r\n  <app-comment></app-comment>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomValidators } from '../core/validators/validator';\r\nimport { BodyService } from '../core/services/body.service';\r\nimport { FetchService } from '../core/services/fetch.service';\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styles: ['./form.component.scss'],\r\n  providers: [BodyService, FetchService]\r\n})\r\nexport class FormComponent implements OnInit {\r\n    constructor(\r\n      private bodyService: BodyService,\r\n      private fetchService: FetchService) { }\r\n    form: FormGroup;\r\n    date: Date;\r\n\r\n    ngOnInit() {\r\n      this.date = new Date();\r\n      this.form = new FormGroup({\r\n        name: new FormControl('', [\r\n          Validators.required,\r\n          CustomValidators.noWhitespace\r\n        ]),\r\n        surname: new FormControl('', [\r\n          Validators.required,\r\n          CustomValidators.noWhitespace\r\n        ]),\r\n        sex: new FormControl('male', ),\r\n        born: new FormControl('', [\r\n          Validators.required]),\r\n        height: new FormControl(0, [\r\n          Validators.min(30),\r\n          Validators.max(300),\r\n          Validators.required\r\n        ]),\r\n        phoneNumber: new FormControl('', [\r\n          Validators.required,\r\n          CustomValidators.noWhitespace\r\n        ]),\r\n        email: new FormControl('', [\r\n          Validators.email,\r\n          Validators.required]),\r\n        education: new FormControl('higher'),\r\n        prefferedRegion: new FormControl(''),\r\n        expectedSalary: new FormControl(0, [\r\n          Validators.min(1),\r\n          Validators.required\r\n        ]),\r\n        unemployedFor: new FormGroup({\r\n          unemployedForYears: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(100),\r\n            Validators.required\r\n          ]),\r\n          unemployedForMonths: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(11),\r\n            Validators.required\r\n          ])\r\n        }),\r\n        workExperience: new FormGroup({\r\n          workExperienceYears: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(100),\r\n            Validators.required\r\n          ]),\r\n          workExperienceMonths: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(11),\r\n            Validators.required\r\n          ]),\r\n        }),\r\n        note: new FormControl(''),\r\n        languageSkills: new FormGroup({\r\n          english: new FormControl(),\r\n          russian: new FormControl(),\r\n          englishProficiency: new FormControl('basic'),\r\n          russianProficiency: new FormControl('basic')\r\n        }),\r\n        professions: new FormGroup({\r\n          trainee: new FormControl(),\r\n          dealer: new FormControl(),\r\n          inspector: new FormControl(),\r\n          manager: new FormControl(),\r\n          pit_boss: new FormControl(),\r\n          waiter: new FormControl(),\r\n          barman: new FormControl(),\r\n        }),\r\n        messengers: new FormGroup({\r\n          WhatsApp: new FormControl(),\r\n          Telegram: new FormControl(),\r\n          Viber: new FormControl(),\r\n          msWhatsApp: new FormControl(),\r\n          msTelegram: new FormControl(),\r\n          msViber: new FormControl(),\r\n        })\r\n      });\r\n    }\r\n\r\n    submit() {\r\n      if (this.form.valid) {\r\n        const formData = this.bodyService.convertFormData({...this.form.value});\r\n        this.fetchService.addForm(formData).subscribe();\r\n        this.form.reset();\r\n      }\r\n    }\r\n  }\r\n","<div class=\"container\">\r\n    <form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n       <h1>{{ 'FORM.TITLE' | translate }}</h1>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.NAME' | translate }}</label>\r\n        <input type=\"text\" name=\"name\" placeholder=\"Name\" formControlName=\"name\">\r\n        <div\r\n          *ngIf=\"form.get('name').invalid && form.get('name').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('name').errors\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.SURNAME' | translate }}</label>\r\n        <input type=\"text\" name=\"surname\" placeholder=\"Surname\" formControlName=\"surname\">\r\n        <div\r\n          *ngIf=\"form.get('surname').invalid && form.get('surname').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('surname').errors\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.SEX.TITLE' | translate }}</label>\r\n        <select name=\"sex\" formControlName=\"sex\">\r\n          <option value=\"male\">{{ 'FORM.SEX.MALE' | translate }}</option>\r\n          <option value=\"female\">{{ 'FORM.SEX.FEMALE' | translate }}</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.BORN' | translate }}</label>\r\n        <input type=\"date\" name=\"born\" max=\"{{date | date:'yyyy-MM-dd'}}\" formControlName=\"born\">\r\n        <div\r\n          *ngIf=\"form.get('born').invalid && form.get('born').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('born').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>   \r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.HEIGHT.TITLE' | translate }}</label>\r\n        <input type=\"number\"  name=\"height\" min=\"30\" max=\"300\" formControlName=\"height\">\r\n        <div\r\n          *ngIf=\"form.get('height').invalid && form.get('height').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('height').errors.min\">\r\n            {{ 'FORM.HEIGHT.MIN' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('height').errors.max\">\r\n            {{ 'FORM.HEIGHT.MAX' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('height').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.PHONE_NUMBER' | translate }}</label>\r\n        <input type=\"text\" name=\"phoneNumber\" formControlName=\"phoneNumber\">\r\n        <div\r\n          *ngIf=\"form.get('phoneNumber').invalid && form.get('phoneNumber').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('phoneNumber').errors\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.EMAIL' | translate }}</label>\r\n        <input type=\"text\" name=\"email\" placeholder=\"Email\" formControlName=\"email\">\r\n        <div\r\n          *ngIf=\"form.get('email').invalid && form.get('email').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('email').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('email').errors.email\">\r\n            {{ 'FORM.VALIDATORS.EMAIL' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.EDUCATION.TITLE' | translate }}</label>\r\n        <select name=\"education\" formControlName=\"education\">\r\n          <option value=\"primary\">{{ 'FORM.EDUCATION.PRIMARY' | translate }}</option>\r\n          <option value=\"secondary\">{{ 'FORM.EDUCATION.SECONDARY' | translate }}</option>\r\n          <option value=\"unfinished_higher\">{{ 'FORM.EDUCATION.UNFINISHED_HIGHER' | translate }}</option>\r\n          <option value=\"higher\">{{ 'FORM.EDUCATION.HIGHER' | translate }}</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.EXPECTED_SALARY' | translate }}</label>\r\n        <input type=\"number\" name=\"expectedSalary\" min=\"1\" formControlName=\"expectedSalary\">\r\n        <div\r\n          *ngIf=\"form.get('expectedSalary').invalid && form.get('expectedSalary').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('expectedSalary').errors.min\">\r\n            {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('expectedSalary').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div> \r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.PREFFERED_REGION' | translate }}</label>\r\n        <input type=\"text\" name=\"prefferedRegion\" formControlName=\"prefferedRegion\">\r\n      </div>\r\n\r\n      <div class=\"card\" formGroupName=\"workExperience\">\r\n        <label>{{ 'FORM.WORK_EXPERIENCE' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FORM.YEARS' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"0\" max=\"100\" name=\"workExperienceYears\" formControlName=\"workExperienceYears\">\r\n          <div\r\n            *ngIf=\"form.controls.workExperience.get('workExperienceYears').invalid \r\n              && form.controls.workExperience.get('workExperienceYears').touched\"\r\n              class=\"validation\">\r\n            <small *ngIf=\"form.controls.workExperience.get('workExperienceYears').errors.max\">\r\n              {{ 'FORM.VALIDATORS.YEARS' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.workExperience.get('workExperienceYears').errors.min\">\r\n              {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.workExperience.get('workExperienceYears').errors.required\">\r\n              {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n            </small>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FORM.MONTHS' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"0\" max=\"11\" name=\"workExperienceMonths\" formControlName=\"workExperienceMonths\">\r\n          <div\r\n              *ngIf=\"form.controls.workExperience.get('workExperienceMonths').invalid \r\n                && form.controls.workExperience.get('workExperienceMonths').touched\"\r\n              class=\"validation\">\r\n            <small *ngIf=\"form.controls.workExperience.get('workExperienceMonths').errors.max\">\r\n              {{ 'FORM.VALIDATORS.MONTHS' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.workExperience.get('workExperienceMonths').errors.min\">\r\n              {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.workExperience.get('workExperienceMonths').errors.required\">\r\n              {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n       <div class=\"card\" formGroupName=\"unemployedFor\">\r\n        <label>{{ 'FORM.UNEMPLOYED_FOR' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FORM.YEARS' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"0\" max=\"100\" name=\"unemployedForYears\" formControlName=\"unemployedForYears\">\r\n            <div\r\n            *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').invalid \r\n              && form.controls.unemployedFor.get('unemployedForYears').touched\"\r\n              class=\"validation\">\r\n            <small *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').errors.max\">\r\n              {{ 'FORM.VALIDATORS.YEARS' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').errors.min\">\r\n              {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').errors.required\">\r\n              {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n            </small>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FORM.MONTHS' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"0\" max=\"11\" name=\"unemployedForMonths\" formControlName=\"unemployedForMonths\">\r\n          <div\r\n              *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').invalid \r\n                && form.controls.unemployedFor.get('unemployedForMonths').touched\"\r\n              class=\"validation\">\r\n            <small *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').errors.max\">\r\n              {{ 'FORM.VALIDATORS.MONTHS' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').errors.min\">\r\n              {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').errors.required\">\r\n              {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\" formGroupName=\"languageSkills\">\r\n        <label>{{ 'FORM.LANGUAGE_SKILLS' | translate }}</label>\r\n\r\n        <div class=\"form-control\">\r\n          <label><input type=\"checkbox\" name=\"english\" formControlName=\"english\">{{ 'FORM.LANGUAGES.ENGLISH' | translate }}</label>\r\n          <select name=\"englishProficiency\" formControlName=\"englishProficiency\">\r\n            <option value=\"basic\">{{ 'FORM.LANGUAGE_PROFICIENCY.BASIC' | translate }}</option>\r\n            <option value=\"intermediate\">{{ 'FORM.LANGUAGE_PROFICIENCY.INTERMEDIATE' | translate }}</option>\r\n            <option value=\"fluent\">{{ 'FORM.LANGUAGE_PROFICIENCY.FLUENT' | translate }}</option>\r\n            <option value=\"native\">{{ 'FORM.LANGUAGE_PROFICIENCY.NATIVE' | translate }}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><input type=\"checkbox\" name=\"russian\" formControlName=\"russian\">{{ 'FORM.LANGUAGES.RUSSIAN' | translate }}</label>\r\n          <select name=\"russianProficiency\" formControlName=\"russianProficiency\">\r\n            <option value=\"basic\">{{ 'FORM.LANGUAGE_PROFICIENCY.BASIC' | translate }}</option>\r\n            <option value=\"intermediate\">{{ 'FORM.LANGUAGE_PROFICIENCY.INTERMEDIATE' | translate }}</option>\r\n            <option value=\"fluent\">{{ 'FORM.LANGUAGE_PROFICIENCY.FLUENT' | translate }}</option>\r\n            <option value=\"native\">{{ 'FORM.LANGUAGE_PROFICIENCY.NATIVE' | translate }}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\" formGroupName=\"professions\">\r\n        <label>{{ 'FORM.PROFESSIONS.TITLE' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <label><input type=\"checkbox\" name=\"trainee\" formControlName=\"trainee\">{{ 'FORM.PROFESSIONS.TRAINEE' | translate }}</label>\r\n          <label><input type=\"checkbox\" name=\"dealer\" formControlName=\"dealer\">{{ 'FORM.PROFESSIONS.DEALER' | translate }}</label>\r\n          <label><input type=\"checkbox\" name=\"inspector\" formControlName=\"inspector\">{{ 'FORM.PROFESSIONS.INSPECTOR' | translate }}</label>\r\n          <label><input type=\"checkbox\" name=\"manager\" formControlName=\"manager\">{{ 'FORM.PROFESSIONS.MANAGER' | translate }}</label>\r\n          <label><input type=\"checkbox\" name=\"pit_boss\" formControlName=\"pit_boss\">{{ 'FORM.PROFESSIONS.PIT_BOSS' | translate }}</label>\r\n          <label><input type=\"checkbox\" name=\"waiter\" formControlName=\"waiter\">{{ 'FORM.PROFESSIONS.WAITER' | translate }}</label>\r\n          <label><input type=\"checkbox\" name=\"barman\" formControlName=\"barman\">{{ 'FORM.PROFESSIONS.BARMAN' | translate }}</label>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\" formGroupName=\"messengers\">\r\n        <label>{{ 'FORM.MESSENGERS.TITLE' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <label><input type=\"checkbox\" name=\"Telegram\" formControlName=\"msTelegram\">{{ 'FORM.MESSENGERS.TELEGRAM' | translate }}</label>\r\n          <input type=\"text\" name=\"Telegram\" formControlName=\"Telegram\">\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><input type=\"checkbox\" name=\"msWhatsApp\" formControlName=\"msWhatsApp\">{{ 'FORM.MESSENGERS.WHATS_APP' | translate }}</label>\r\n          <input type=\"text\" name=\"WhatsApp\" formControlName=\"WhatsApp\">\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><input type=\"checkbox\" name=\"msViber\" formControlName=\"msViber\">{{ 'FORM.MESSENGERS.VIBER' | translate }}</label>\r\n          <input type=\"text\" name=\"Viber\" formControlName=\"Viber\">\r\n        </div>\r\n      </div>\r\n\r\n      <textarea rows=\"5\" name=\"note\" placeholder=\"Note...\" formControlName=\"note\"></textarea>\r\n\r\n      <button class=\"btn\" type=\"submit\" [disabled]=\"form.invalid || form.pending\">{{ 'FORM.SUBMIT' | translate }}</button>\r\n    </form>\r\n  </div>\r\n  \r\n  \r\n  \r\n  ","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Form } from '../core/interfaces/form';\r\nimport { FetchService } from '../core/services/fetch.service';\r\nimport { FormService } from '../core/services/form.service';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  providers: [FetchService],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ListComponent implements OnInit {\r\n  forms: Form[] = [];\r\n\r\n  constructor(\r\n    private fetchService: FetchService,\r\n    private formService: FormService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getFormsFromServer();\r\n    this.setThisForms();\r\n  }\r\n\r\n  getFormsFromServer(): void {\r\n    this.fetchService.getForms().subscribe(forms => {\r\n      this.formService.setForms(forms);\r\n      });\r\n    this.selectForm(1);\r\n    }\r\n\r\n  setThisForms(): void {\r\n    this.formService.getForms().subscribe((forms) => {\r\n      this.forms = forms;\r\n    });\r\n  }\r\n\r\n  selectForm(id) {\r\n    if (this.forms[id]) {\r\n      this.formService.setId(id);\r\n    } else {\r\n      this.formService.setId(undefined);\r\n    }\r\n  }\r\n\r\n  delete(id: number): void {\r\n    this.fetchService\r\n        .deleteForm(id)\r\n        .subscribe();\r\n  }\r\n\r\n  deleteItem(id: number) {\r\n    this.delete(id);\r\n    this.getFormsFromServer();\r\n    this.selectForm(1);\r\n  }\r\n\r\n}\r\n","<div class=\"container list\">\r\n    <h2>{{ 'LIST' | translate }}</h2>\r\n    <hr>\r\n    <div class=\"card\" *ngFor=\"let form of forms; let i = index\" #el [attr.id]=\"form.formid\" (click)=selectForm(i)>\r\n      <p>\r\n        <span class=\"name\">{{form.name}} {{form.surname}}</span>\r\n        <span>\r\n          <button class=\"btn btn-danger\" (click)=deleteItem(el.id)>✖</button>\r\n        </span>\r\n      </p>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../core/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { CustomValidators } from '../core/validators/validator';\r\nimport { UserInfo } from '../core/auth/interfaces/userInfo';\r\nimport { User } from '../core/auth/interfaces/user';\r\nimport { UserService } from '../core/auth/user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  providers: [AuthService]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private router: Router\r\n    ) { }\r\n  form: FormGroup;\r\n  error: string;\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      username: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(2),\r\n        Validators.maxLength(50),\r\n        CustomValidators.noWhitespace\r\n      ]),\r\n      password: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(25),\r\n        CustomValidators.noWhitespace\r\n        ])\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.valid) {\r\n    const user: User = {...this.form.value};\r\n    this.authService.login(user)\r\n    .subscribe(\r\n      (res: UserInfo) => {\r\n      this.error = '';\r\n      localStorage.setItem('jwt', res.token);\r\n      localStorage.setItem('username', res.username);\r\n      localStorage.setItem('userid', res.userid.toString());\r\n      this.router.navigate(['/view']);\r\n      },\r\n      (err) => {\r\n        this.error = err.error.text;\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n       <h1>{{ 'LOGIN.TITLE' | translate }}</h1>\r\n\r\n       <div class=\"form-control\">\r\n        <label>{{ 'LOGIN.USERNAME.TITLE' | translate }}</label>\r\n        <input type=\"text\" name=\"username\" placeholder=\"Username\" formControlName=\"username\">\r\n        <div\r\n          *ngIf=\"form.get('username').invalid && form.get('username').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('username').errors.required || form.get('username').errors.whitespace\">\r\n            {{ 'LOGIN.USERNAME.REQUIRED' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('username').errors.minlength\">\r\n            {{ 'LOGIN.USERNAME.MIN_LENGTH' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('username').errors.maxlength\">\r\n            {{ 'LOGIN.USERNAME.MAX_LENGTH' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'LOGIN.PASSWORD.TITLE' | translate }}</label>\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" formControlName=\"password\">\r\n        <div\r\n          *ngIf=\"form.get('password').invalid && form.get('password').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('password').errors.required || form.get('password').errors.whitespace\">\r\n            {{ 'LOGIN.PASSWORD.REQUIRED' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('password').errors.minlength\">\r\n            {{ 'LOGIN.PASSWORD.MIN_LENGTH' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('password').errors.maxlength\">\r\n            {{ 'LOGIN.PASSWORD.MAX_LENGTH' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <p *ngIf=\"error\" class=\"error\">{{error}}</p>\r\n\r\n      <button class=\"btn\" type=\"submit\" [disabled]=\"form.invalid || form.pending\">{{ 'LOGIN.SUBMIT' | translate }}</button>\r\n    </form>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-view',\r\n  templateUrl: './view.component.html',\r\n  styleUrls: ['./view.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ViewComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n}\r\n","<div class=\"grid-container\">\r\n  <app-filter></app-filter>\r\n  <app-list></app-list>\r\n  <app-form-update></app-form-update>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}