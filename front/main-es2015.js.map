{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/comment/comment.component.ts","./src/app/comment/comment.component.html","./src/app/core/auth/auth.guard.ts","./src/app/core/auth/auth.service.ts","./src/app/core/auth/user.service.ts","./src/app/core/services/body.service.ts","./src/app/core/services/fetch.service.ts","./src/app/core/services/form.service.ts","./src/app/core/services/patch.service.ts","./src/app/core/validators/validator.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/filter/filter.component.ts","./src/app/filter/filter.component.html","./src/app/form-update/form-update.component.ts","./src/app/form-update/form-update.component.html","./src/app/form/form.component.ts","./src/app/form/form.component.html","./src/app/list/list.component.ts","./src/app/list/list.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/view/view.component.ts","./src/app/view/view.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormComponent } from './form/form.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ViewComponent } from './view/view.component';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { AuthGuard } from './core/auth/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: FormComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'view', component: ViewComponent,\r\n    canActivate: [AuthGuard]},\r\n  {path: 'error', component: ErrorComponent},\r\n  {path: '**', redirectTo: '/error'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AuthService } from './core/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  providers: [AuthService]\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    public translate: TranslateService,\r\n    private router: Router\r\n    ) {\r\n    translate.addLangs(['en', 'ru']);\r\n    translate.setDefaultLang('en');\r\n    const browserLang = translate.getBrowserLang();\r\n    translate.use(browserLang.match(/en|ru/) ? browserLang : 'ru');\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout()\r\n    .subscribe(\r\n      () => {\r\n      localStorage.removeItem('jwt');\r\n      localStorage.removeItem('username');\r\n      localStorage.removeItem('userid');\r\n      this.router.navigate(['/']);\r\n      });\r\n  }\r\n\r\n  isAuth() {\r\n    if (true === this.authService.isAuthentificated()) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar\">\r\n    <h1>\r\n        <a routerLink=\"/\">HR manager</a>\r\n    </h1>\r\n    <ul>\r\n        <li>\r\n                <select class=\"lang\" #langselect (change)=\"translate.use(langselect.value)\">\r\n                    <option *ngFor=\"let lang of translate.getLangs()\" [value]=\"lang\">{{ lang }}</option>\r\n                </select>\r\n        </li>\r\n        <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\r\n            <a routerLink=\"/\">{{ 'HOME.FORM' | translate }}</a>\r\n        </li>\r\n        <li *ngIf=\"!isAuth()\" routerLinkActive=\"active\">\r\n            <a routerLink=\"/login\">{{ 'HOME.LOGIN' | translate }}</a>\r\n        </li>\r\n        <li *ngIf=\"isAuth()\" routerLinkActive=\"active\">\r\n            <a routerLink=\"/view\">{{ 'HOME.VIEW' | translate }}</a>\r\n        </li>\r\n        <li><button *ngIf=\"isAuth()\" class=\"btn\" (click)=\"logout()\" >{{ 'HOME.LOGOUT' | translate }}</button></li>\r\n    </ul>\r\n  </nav>\r\n  \r\n  <div class=\"container\">\r\n    <div class=\"card\">\r\n  \r\n      <router-outlet></router-outlet>\r\n  \r\n    </div>\r\n  </div>\r\n  ","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormComponent } from './form/form.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { ViewComponent } from './view/view.component';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { CommentComponent } from './comment/comment.component';\r\nimport { FormUpdateComponent } from './form-update/form-update.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { FilterComponent } from './filter/filter.component';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FormComponent,\r\n    ViewComponent,\r\n    LoginComponent,\r\n    ErrorComponent,\r\n    CommentComponent,\r\n    FormUpdateComponent,\r\n    ListComponent,\r\n    FilterComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n    ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Comment } from '../core/interfaces/comment';\r\nimport { CustomValidators } from '../core/validators/validator';\r\nimport { FetchService } from '../core/services/fetch.service';\r\nimport { FormService } from '../core/services/form.service';\r\nimport { UserService } from '../core/auth/user.service';\r\nimport { Form } from '../core/interfaces/form';\r\n\r\n@Component({\r\n  selector: 'app-comment',\r\n  templateUrl: './comment.component.html',\r\n  styleUrls: ['./comment.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [FetchService]\r\n})\r\nexport class CommentComponent implements OnInit {\r\n  id: number | undefined;\r\n  comments: Comment[] = [];\r\n  comment: FormGroup;\r\n  userid: number;\r\n  username: string;\r\n  forms: Form[];\r\n\r\n  constructor(\r\n    private fetchService: FetchService,\r\n    private formService: FormService,\r\n    private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formService.getId().subscribe((id) => {\r\n      this.id = id;\r\n      this.getComments();\r\n    });\r\n    this.formService.getForms().subscribe((forms) => {\r\n      this.forms = forms;\r\n    });\r\n    this.username = localStorage.username;\r\n    this.userid = localStorage.userid;\r\n    this.comment = new FormGroup({\r\n      text: new FormControl('', [\r\n        Validators.required,\r\n        CustomValidators.noWhitespace,\r\n        Validators.maxLength(255)\r\n      ])\r\n    });\r\n  }\r\n\r\n  getComments() {\r\n    if (this.id !== undefined) {\r\n      this.fetchService.getComments(this.forms[this.id].formid)\r\n      .subscribe(comments => {\r\n        this.comments = comments;\r\n      });\r\n    }\r\n  }\r\n\r\n  addComment() {\r\n    if (this.comment.valid && this.id !== undefined) {\r\n      const comment: Comment = {\r\n        comment: this.comment.value.text,\r\n        username: this.username,\r\n        userid: this.userid\r\n      };\r\n      this.fetchService.addComment(this.forms[this.id].formid, comment)\r\n      .subscribe(() => {\r\n        this.getComments();\r\n        this.comment.reset();\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h2>{{ 'COMMENT.TITLE' | translate }}</h2>\r\n    <hr>\r\n    <div class=\"card\" *ngFor=\"let comment of comments; let i = index\" >\r\n        <h3 class=\"name\">{{comment.user.username}}</h3>\r\n        <div class=\"comment\">{{comment.comment}}</div>\r\n    </div>\r\n    <form class=\"card\" [formGroup]=\"comment\" (ngSubmit)=\"addComment()\">\r\n      <label><h3 class=\"name\">{{ username }}</h3></label>\r\n      <div class=\"form-control\">\r\n      <textarea rows=\"7\" name=\"text\" placeholder=\"Note...\" formControlName=\"text\"></textarea>\r\n      <div\r\n      *ngIf=\"comment.get('text').invalid && comment.get('text').touched\"\r\n      class=\"validation\">\r\n      <small *ngIf=\"comment.get('text').errors\">\r\n        {{ 'COMMENT.REQUIRED' | translate }}\r\n      </small>\r\n    </div>\r\n    </div>\r\n      <button class=\"btn\" type=\"submit\" [disabled]=\"comment.invalid || comment.pending\">{{ 'COMMENT.SUBMIT' | translate }}</button>\r\n    </form>\r\n</div>","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivateChild } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ) {}\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ): Observable<boolean> | Promise<boolean> | boolean {\r\n        if (this.authService.isAuthentificated()) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/error']);\r\n        }\r\n    }\r\n\r\n    canActivateChild(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ): Observable<boolean> | Promise<boolean> | boolean {\r\n        return this.canActivate(route, state);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UserInfo } from './interfaces/userInfo';\r\nimport { User } from './interfaces/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n    private isAuth = false;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    login(user: User): Observable<UserInfo> {\r\n        const url = `login`;\r\n        return this.http.post<UserInfo>(url, user);\r\n    }\r\n\r\n    logout(): Observable<{}> {\r\n        const url = `logout`;\r\n        return this.http.get(url);\r\n    }\r\n\r\n    isAuthentificated() {\r\n        if (localStorage.jwt) {\r\n            this.isAuth = true;\r\n            return this.isAuth;\r\n        } else {\r\n            this.isAuth = false;\r\n            return this.isAuth;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserInfo } from './interfaces/userInfo';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private user: UserInfo;\r\n\r\n  getUser(): UserInfo {\r\n    return this.user;\r\n  }\r\n\r\n  setUser(user: UserInfo): void {\r\n    this.user = user;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Form } from '../interfaces/form';\r\nimport { Filter } from '../interfaces/filter';\r\n\r\n@Injectable()\r\nexport class BodyService {\r\n\r\n    convertFormData(vals): Form {\r\n        const formData: Form = {\r\n          name: vals.name as string,\r\n          surname: vals.surname as string,\r\n          sex: vals.sex as string,\r\n          born: vals.born as string,\r\n          phoneNumber: vals.phoneNumber as string,\r\n          email: vals.email as string,\r\n          education: vals.education as string,\r\n          prefferedRegion: vals.prefferedRegion as string,\r\n          note: vals.note as string,\r\n          height: Number.parseInt(vals.height, 10),\r\n          expectedSalary: Number.parseInt(vals.expectedSalary, 10),\r\n          workExperience: Number.parseInt(vals.workExperience.workExperienceYears, 10) * 12 +\r\n          Number.parseInt(vals.workExperience.workExperienceMonths, 10),\r\n          unemployedFor: Number.parseInt(vals.unemployedFor.unemployedForYears, 10) * 12 +\r\n          Number.parseInt(vals.unemployedFor.unemployedForMonths, 10),\r\n          languageSkills: [],\r\n          messengers: [],\r\n          professions: []\r\n        };\r\n\r\n        const languages: string[] = ['english', 'russian'];\r\n        languages.forEach(element => {\r\n            if (vals.languageSkills[element]) {\r\n                formData.languageSkills.push({language: element, languageProficiency: vals.languageSkills[element + 'Proficiency']});\r\n            }\r\n        });\r\n\r\n        const professions: string[] = [\r\n            'trainee',\r\n            'dealer',\r\n            'inspector',\r\n            'manager',\r\n            'pit_boss',\r\n            'waiter',\r\n            'barman'\r\n        ];\r\n        professions.forEach(element => {\r\n            if (vals.professions[element]) {\r\n                formData.professions.push({profession: element});\r\n            }\r\n        });\r\n\r\n        const messengers: string[] = [\r\n            'Telegram',\r\n            'Viber',\r\n            'WhatsApp'\r\n        ];\r\n        messengers.forEach(element => {\r\n            if (vals.messengers['ms' + element]) {\r\n                formData.messengers.push({messenger: element, info: vals.messengers[element]});\r\n              }\r\n        });\r\n\r\n        return formData;\r\n    }\r\n\r\n    convertFilterData(vals): Filter {\r\n\r\n        const filterData: Filter = {\r\n            sex: vals.sex as string,\r\n            education: vals.education as string,\r\n            age: [{from: vals.age.ageFrom, to: vals.age.ageTo }],\r\n            workExperience: [{from: vals.workExperienceFrom.workExperienceYearsFrom * 12 + vals.workExperienceFrom.workExperienceMonthsFrom,\r\n                              to: vals.workExperienceTo.workExperienceYearsTo * 12 + vals.workExperienceTo.workExperienceMonthsTo}],\r\n            height: [{from: vals.height.heightFrom, to: vals.height.heightTo}],\r\n            expectedSalary: [{from: vals.expectedSalary.expectedSalaryFrom, to: vals.expectedSalary.expectedSalaryTo}],\r\n            languageSkills: [{language: vals.languageSkills.language, languageProficiency: vals.languageSkills.languageProficiency}],\r\n            professions: [],\r\n            messengers: [],\r\n        };\r\n\r\n        const professions: string[] = [\r\n            'trainee',\r\n            'dealer',\r\n            'inspector',\r\n            'manager',\r\n            'pit_boss',\r\n            'waiter',\r\n            'barman'\r\n        ];\r\n\r\n        professions.forEach(element => {\r\n            if (vals.professions[element]) {\r\n                filterData.professions.push({profession: element});\r\n              }\r\n        });\r\n\r\n        const messengers: string[] = [\r\n            'Telegram',\r\n            'Viber',\r\n            'WhatsApp'\r\n        ];\r\n\r\n        messengers.forEach(element => {\r\n            if (vals.messengers[element]) {\r\n                filterData.messengers.push({messenger: element});\r\n              }\r\n        });\r\n\r\n        return filterData;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Form } from '../interfaces/form';\r\nimport { Filter } from '../interfaces/filter';\r\nimport { Comment } from '../interfaces/comment';\r\n\r\n@Injectable()\r\nexport class FetchService {\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + localStorage.jwt\r\n        })\r\n      };\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    addForm(form: Form): Observable<Form> {\r\n        return this.http.post<Form>('form', form);\r\n    }\r\n\r\n    getForms(): Observable<Form[]> {\r\n        return this.http.get<Form[]>('forms', this.httpOptions);\r\n    }\r\n\r\n    deleteForm(id: number): Observable<{}> {\r\n        const url = `form/${id}`;\r\n        return this.http.delete(url, this.httpOptions);\r\n    }\r\n\r\n    updateForm(form: Form): Observable<Form[]> {\r\n        const url = `form/${form.formid}`;\r\n        return this.http.put<Form[]>(url, form, this.httpOptions);\r\n    }\r\n\r\n    filterForms(filter: Filter): Observable<Form[]> {\r\n        const url = `forms`;\r\n        return this.http.post<Form[]>(url, filter, this.httpOptions);\r\n    }\r\n\r\n    getComments(formid: number): Observable<Comment[]> {\r\n        const url = `form/${formid}/comment/`;\r\n        return this.http.get<Comment[]>(url, this.httpOptions);\r\n    }\r\n\r\n    addComment(formid: number, comment: Comment): Observable<Comment[]> {\r\n        const url = `form/${formid}/comment/`;\r\n        return this.http.post<Comment[]>(url, comment, this.httpOptions);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Form } from '../interfaces/form';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormService {\r\n\r\n  private forms: BehaviorSubject<Form[]>;\r\n  private id: BehaviorSubject<number | undefined>;\r\n\r\n  constructor() {\r\n    this.forms = new BehaviorSubject<Form[]>([]);\r\n    this.id = new BehaviorSubject<number | undefined>(undefined);\r\n  }\r\n\r\n  getForms(): Observable<Form[]> {\r\n    return this.forms.asObservable();\r\n  }\r\n\r\n  setForms(newValue): void {\r\n    this.forms.next(newValue);\r\n  }\r\n\r\n  getId(): Observable<number | undefined> {\r\n    return this.id.asObservable();\r\n  }\r\n\r\n  setId(id: number | undefined): void {\r\n    this.id.next(id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Form } from '../interfaces/form';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nconst professions = [\r\n  'trainee',\r\n  'dealer',\r\n  'inspector',\r\n  'manager',\r\n  'pit_boss',\r\n  'waiter',\r\n  'barman'\r\n];\r\n\r\nconst messengers = [\r\n  'Telegram',\r\n  'Viber',\r\n  'WhatsApp'\r\n];\r\n\r\n@Injectable()\r\nexport class PatchService {\r\n\r\n  patchData(id: number, form: FormGroup, forms: Form[]) {\r\n      const fields: string[] = [\r\n          'name',\r\n          'surname',\r\n          'sex',\r\n          'born',\r\n          'height',\r\n          'phoneNumber',\r\n          'email',\r\n          'education',\r\n          'prefferedRegion',\r\n          'note',\r\n          'expectedSalary'\r\n        ];\r\n      fields.forEach(element => {\r\n          form.patchValue({[element]: forms[id][element]});\r\n        });\r\n      const monthsToYears: string[] = [\r\n          'workExperience',\r\n          'unemployedFor'\r\n        ];\r\n      monthsToYears.forEach(element => {\r\n            form.controls[element].patchValue({\r\n                [element + 'Years']: (forms[id][element] - (forms[id][element] % 12)) / 12,\r\n                [element + 'Months']: forms[id][element] % 12,\r\n              });\r\n        });\r\n      forms[id].messengers.forEach(element => {\r\n          messengers.forEach(el => {\r\n            if (element.messenger === el) {\r\n              form.controls.messengers.patchValue({\r\n                ['ms' + el]: true,\r\n                [el]: element.info\r\n              });\r\n            }\r\n          });\r\n        });\r\n      forms[id].languageSkills.forEach(element => {\r\n          ['enlish', 'russian'].forEach(el => {\r\n            if (element.language === el) {\r\n              form.controls.languageSkills.patchValue({\r\n                [el]: true,\r\n                [el + 'Proficiency']: element.languageProficiency\r\n              });\r\n            }\r\n          });\r\n        });\r\n      forms[id].professions.forEach(element => {\r\n          professions.forEach(el => {\r\n            if (element.profession === el) {\r\n              form.controls.professions.patchValue({\r\n                [el]: true,\r\n              });\r\n            }\r\n          });\r\n        });\r\n  }\r\n\r\n  resetFilter(filter: FormGroup) {\r\n    filter.patchValue({\r\n      sex: 'male',\r\n      education: 'higher'\r\n    });\r\n    professions.forEach(el => {\r\n        filter.controls.professions.patchValue({\r\n        [el]: false\r\n      });\r\n    });\r\n    messengers.forEach(el => {\r\n        filter.controls.messengers.patchValue({\r\n        [el]: false\r\n      });\r\n    });\r\n    filter.controls.languageSkills.patchValue({\r\n      language: 'russian',\r\n      languageProficiency: 'native'\r\n    });\r\n    filter.controls.expectedSalary.patchValue({\r\n      expectedSalaryFrom: 1,\r\n      expectedSalaryTo: 100000\r\n    });\r\n    filter.controls.age.patchValue({\r\n      ageFrom: 14,\r\n      ageTo: 100\r\n    });\r\n    filter.controls.height.patchValue({\r\n      heightFrom: 30,\r\n      heightTo: 300\r\n    });\r\n    filter.controls.workExperienceFrom.patchValue({\r\n      workExperienceYearsFrom: 0,\r\n      workExperienceMonthsFrom: 0\r\n    });\r\n    filter.controls.workExperienceTo.patchValue({\r\n      workExperienceYearsTo: 100,\r\n      workExperienceMonthsTo: 11\r\n    });\r\n  }\r\n}\r\n","import { FormControl } from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n    static noWhitespace(control: FormControl) {\r\n        const isWhitespace = (control.value || '').trim().length === 0;\r\n        const isValid = !isWhitespace;\r\n        return isValid ? null : { whitespace: true };\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.scss']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>Error 404</h1>\r\n<h3>Page not found</h3>\r\n<button class=\"btn\" style=\"padding: 0,5rem; \"><a style=\"color: white;\" routerLink=\"/\">Home page</a></button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { BodyService } from '../core/services/body.service';\r\nimport { FetchService } from '../core/services/fetch.service';\r\nimport { FormService } from '../core/services/form.service';\r\nimport { Filter } from '../core/interfaces/filter';\r\nimport { Form } from '../core/interfaces/form';\r\nimport { PatchService } from '../core/services/patch.service';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: ['./filter.component.scss'],\r\n  providers: [BodyService, FetchService, PatchService]\r\n})\r\nexport class FilterComponent implements OnInit {\r\n  filter: FormGroup;\r\n  forms: Form[] = [];\r\n\r\n  constructor(\r\n    private bodyService: BodyService,\r\n    private fetchService: FetchService,\r\n    private formService: FormService,\r\n    private patchService: PatchService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.filter = new FormGroup({\r\n      sex: new FormControl('male', ),\r\n      height: new FormGroup({\r\n        heightFrom: new FormControl(30, [\r\n          Validators.min(30),\r\n          Validators.max(300),\r\n          Validators.required\r\n        ]),\r\n        heightTo: new FormControl(300, [\r\n          Validators.min(30),\r\n          Validators.max(300),\r\n          Validators.required\r\n        ])\r\n      }),\r\n      age: new FormGroup({\r\n        ageFrom: new FormControl(14, [\r\n          Validators.min(14),\r\n          Validators.max(100),\r\n          Validators.required\r\n        ]),\r\n        ageTo: new FormControl(100, [\r\n          Validators.min(14),\r\n          Validators.max(100),\r\n          Validators.required\r\n        ])\r\n      }),\r\n      workExperienceFrom: new FormGroup({\r\n        workExperienceYearsFrom: new FormControl(0, [\r\n          Validators.min(0),\r\n          Validators.max(100),\r\n          Validators.required\r\n        ]),\r\n        workExperienceMonthsFrom: new FormControl(0, [\r\n          Validators.min(0),\r\n          Validators.max(11),\r\n          Validators.required\r\n        ]),\r\n      }),\r\n      workExperienceTo: new FormGroup({\r\n        workExperienceYearsTo: new FormControl(100, [\r\n          Validators.min(0),\r\n          Validators.max(100),\r\n          Validators.required\r\n        ]),\r\n        workExperienceMonthsTo: new FormControl(11, [\r\n          Validators.min(0),\r\n          Validators.max(11),\r\n          Validators.required\r\n        ]),\r\n      }),\r\n      education: new FormControl('higher'),\r\n      expectedSalary: new FormGroup({\r\n        expectedSalaryFrom: new FormControl(1, [\r\n          Validators.min(1),\r\n          Validators.max(100000),\r\n          Validators.required\r\n        ]),\r\n        expectedSalaryTo: new FormControl(100000, [\r\n          Validators.min(1),\r\n          Validators.max(100000),\r\n          Validators.required\r\n        ]),\r\n      }),\r\n      professions: new FormGroup({\r\n        trainee: new FormControl(),\r\n        dealer: new FormControl(),\r\n        inspector: new FormControl(),\r\n        manager: new FormControl(),\r\n        pit_boss: new FormControl(),\r\n        waiter: new FormControl(),\r\n        barman: new FormControl(),\r\n      }),\r\n      messengers: new FormGroup({\r\n        WhatsApp: new FormControl(),\r\n        Telegram: new FormControl(),\r\n        Viber: new FormControl(),\r\n      }),\r\n      languageSkills: new FormGroup({\r\n        language: new FormControl('russian'),\r\n        languageProficiency: new FormControl('native'),\r\n      }),\r\n    });\r\n  }\r\n\r\n  filterSubmit() {\r\n    if (this.filter.valid) {\r\n      const filterData: Filter = this.bodyService.convertFilterData({...this.filter.value});\r\n      this.fetchService.filterForms(filterData).subscribe(forms => {\r\n          this.formService.setForms(forms);\r\n          this.formService.setId(undefined);\r\n      });\r\n    }\r\n  }\r\n\r\n  filterReset(): void {\r\n    this.patchService.resetFilter(this.filter);\r\n    this.fetchService.getForms().subscribe(forms => {\r\n      this.formService.setForms(forms);\r\n    });\r\n    this.formService.setId(undefined);\r\n  }\r\n}\r\n","<div class=\"container filter\">\r\n  <div class=\"filter-header\">\r\n    <h2>{{ 'FILTER.TITLE' | translate }}</h2>\r\n    <button class=\"btn\" [disabled]=\"!filter.dirty\" (click)=\"filterReset()\">{{ 'FILTER.RESET' | translate }}</button>\r\n  </div>\r\n    <hr>\r\n    \r\n    <form class=\"card\" [formGroup]=\"filter\" (ngSubmit)=\"filterSubmit()\">\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FILTER.SEX.TITLE' | translate }}</label>\r\n        <select name=\"sex\" formControlName=\"sex\">\r\n          <option value=\"male\">{{ 'FILTER.SEX.MALE' | translate }}</option>\r\n          <option value=\"female\">{{ 'FILTER.SEX.FEMALE' | translate }}</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"card\" formGroupName=\"age\">\r\n        <label>{{ 'FILTER.AGE.TITLE' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FILTER.FROM' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"14\" max=\"100\" name=\"ageFrom\" formControlName=\"ageFrom\">\r\n          <div\r\n          *ngIf=\"filter.controls.age.get('ageFrom').invalid \r\n            && filter.controls.age.get('ageFrom').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"filter.controls.age.get('ageFrom').errors.max\">\r\n            {{ 'FILTER.AGE.MAX' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.age.get('ageFrom').errors.min\">\r\n            {{ 'FILTER.AGE.MIN' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.age.get('ageFrom').errors.required\">\r\n            {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FILTER.TO' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"14\" max=\"100\" name=\"ageTo\" formControlName=\"ageTo\">\r\n          <div\r\n          *ngIf=\"filter.controls.age.get('ageTo').invalid \r\n            && filter.controls.age.get('ageTo').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"filter.controls.age.get('ageTo').errors.max\">\r\n            {{ 'FILTER.AGE.MAX' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.age.get('ageTo').errors.min\">\r\n            {{ 'FILTER.AGE.MIN' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.age.get('ageTo').errors.required\">\r\n            {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\" formGroupName=\"height\">\r\n        <label>{{ 'FILTER.HEIGHT.TITLE' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FILTER.FROM' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"30\" max=\"300\" name=\"heightFrom\" formControlName=\"heightFrom\">\r\n          <div\r\n          *ngIf=\"filter.controls.height.get('heightFrom').invalid \r\n            && filter.controls.height.get('heightFrom').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"filter.controls.height.get('heightFrom').errors.max\">\r\n            {{ 'FILTER.HEIGHT.MAX' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.height.get('heightFrom').errors.min\">\r\n            {{ 'FILTER.HEIGHT.MIN' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.height.get('heightFrom').errors.required\">\r\n            {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FILTER.TO' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"30\" max=\"300\" name=\"heightTo\" formControlName=\"heightTo\">\r\n          <div\r\n          *ngIf=\"filter.controls.height.get('heightTo').invalid \r\n            && filter.controls.height.get('heightTo').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"filter.controls.height.get('heightTo').errors.max\">\r\n            {{ 'FILTER.HEIGHT.MAX' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.height.get('heightTo').errors.min\">\r\n            {{ 'FILTER.HEIGHT.MIN' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.height.get('heightTo').errors.required\">\r\n            {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\" formGroupName=\"expectedSalary\">\r\n        <label>{{ 'FILTER.EXPECTED_SALARY.TITLE' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FILTER.FROM' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"1\" max=\"100000\" name=\"expectedSalaryFrom\" formControlName=\"expectedSalaryFrom\">\r\n          <div\r\n          *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryFrom').invalid \r\n            && filter.controls.expectedSalary.get('expectedSalaryFrom').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryFrom').errors.max\">\r\n            {{ 'FILTER.EXPECTED_SALARY.MAX' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryFrom').errors.min\">\r\n            {{ 'FILTER.EXPECTED_SALARY.MIN' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryFrom').errors.required\">\r\n            {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FILTER.TO' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"1\" max=\"100000\" name=\"expectedSalaryTo\" formControlName=\"expectedSalaryTo\">\r\n          <div\r\n          *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryTo').invalid \r\n            && filter.controls.expectedSalary.get('expectedSalaryTo').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryTo').errors.max\">\r\n            {{ 'FILTER.EXPECTED_SALARY.MAX' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryTo').errors.min\">\r\n            {{ 'FILTER.EXPECTED_SALARY.MIN' | translate }}\r\n          </small>\r\n          <small *ngIf=\"filter.controls.expectedSalary.get('expectedSalaryTo').errors.required\">\r\n            {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"form-control\">\r\n        <label>{{ 'FILTER.EDUCATION.TITLE' | translate }}</label>\r\n        <select name=\"education\" formControlName=\"education\">\r\n          <option value=\"primary\">{{ 'FILTER.EDUCATION.PRIMARY' | translate }}</option>\r\n          <option value=\"secondary\">{{ 'FILTER.EDUCATION.SECONDARY' | translate }}</option>\r\n          <option value=\"unfinished_higher\">{{ 'FILTER.EDUCATION.UNFINISHED_HIGHER' | translate }}</option>\r\n          <option value=\"higher\">{{ 'FILTER.EDUCATION.HIGHER' | translate }}</option>\r\n        </select>\r\n      </div>\r\n\r\n     <div class=\"card\" formGroupName=\"professions\">\r\n      <label>{{ 'FILTER.PROFESSIONS.TITLE' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"trainee\" formControlName=\"trainee\">{{ 'FILTER.PROFESSIONS.TRAINEE' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"dealer\" formControlName=\"dealer\">{{ 'FILTER.PROFESSIONS.DEALER' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"inspector\" formControlName=\"inspector\">{{ 'FILTER.PROFESSIONS.INSPECTOR' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"manager\" formControlName=\"manager\">{{ 'FILTER.PROFESSIONS.MANAGER' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"pit_boss\" formControlName=\"pit_boss\">{{ 'FILTER.PROFESSIONS.PIT_BOSS' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"waiter\" formControlName=\"waiter\">{{ 'FILTER.PROFESSIONS.WAITER' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"barman\" formControlName=\"barman\">{{ 'FILTER.PROFESSIONS.BARMAN' | translate }}</label>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card\" formGroupName=\"messengers\">\r\n      <label>{{ 'FILTER.MESSENGERS.TITLE' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"Telegram\" formControlName=\"Telegram\">{{ 'FILTER.MESSENGERS.TELEGRAM' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"Viber\" formControlName=\"Viber\">{{ 'FILTER.MESSENGERS.VIBER' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"WhatsApp\" formControlName=\"WhatsApp\">{{ 'FILTER.MESSENGERS.WHATS_APP' | translate }}</label>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card\" formGroupName=\"languageSkills\">\r\n      <label>{{ 'FILTER.LANGUAGE_SKILLS' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FILTER.LANGUAGES.TITLE' | translate }}</label>\r\n        <select name=\"language\" formControlName=\"language\">\r\n          <option value=\"english\">{{ 'FILTER.LANGUAGES.ENGLISH' | translate }}</option>\r\n          <option value=\"russian\">{{ 'FILTER.LANGUAGES.RUSSIAN' | translate }}</option>\r\n        </select>\r\n        <label>{{ 'FILTER.LANGUAGE_PROFICIENCY.TITLE' | translate }}</label>\r\n        <select name=\"languageProficiency\" formControlName=\"languageProficiency\">\r\n          <option value=\"basic\">{{ 'FILTER.LANGUAGE_PROFICIENCY.BASIC' | translate }}</option>\r\n          <option value=\"intermediate\">{{ 'FILTER.LANGUAGE_PROFICIENCY.INTERMEDIATE' | translate }}</option>\r\n          <option value=\"fluent\">{{ 'FILTER.LANGUAGE_PROFICIENCY.FLUENT' | translate }}</option>\r\n          <option value=\"native\">{{ 'FILTER.LANGUAGE_PROFICIENCY.NATIVE' | translate }}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n      \r\n    <div class=\"card\" formGroupName=\"workExperienceFrom\">\r\n      <label>{{ 'FILTER.WORK_EXPERIENCE_FROM' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FILTER.YEARS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"100\" name=\"workExperienceYearsFrom\" formControlName=\"workExperienceYearsFrom\">\r\n        <div\r\n        *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceYearsFrom').invalid \r\n          && filter.controls.workExperienceFrom.get('workExperienceYearsFrom').touched\"\r\n          class=\"validation\">\r\n        <small *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceYearsFrom').errors.max\">\r\n          {{ 'FILTER.VALIDATORS.YEARS' | translate }}\r\n        </small>\r\n        <small *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceYearsFrom').errors.min\">\r\n          {{ 'FILTER.VALIDATORS.POSITIVE' | translate }}\r\n        </small>\r\n        <small *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceYearsFrom').errors.required\">\r\n          {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n      </div>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FILTER.MONTHS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"11\" name=\"workExperienceMonthsFrom\" formControlName=\"workExperienceMonthsFrom\">\r\n        <div\r\n        *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceMonthsFrom').invalid \r\n          && filter.controls.workExperienceFrom.get('workExperienceMonthsFrom').touched\"\r\n        class=\"validation\">\r\n      <small *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceMonthsFrom').errors.max\">\r\n        {{ 'FILTER.VALIDATORS.MONTHS' | translate }}\r\n      </small>\r\n      <small *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceMonthsFrom').errors.min\">\r\n        {{ 'FILTER.VALIDATORS.POSITIVE' | translate }}\r\n      </small>\r\n      <small *ngIf=\"filter.controls.workExperienceFrom.get('workExperienceMonthsFrom').errors.required\">\r\n        {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n      </small>\r\n    </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card\" formGroupName=\"workExperienceTo\">\r\n      <label>{{ 'FILTER.WORK_EXPERIENCE_TO' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FILTER.YEARS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"100\" name=\"workExperienceYearsTo\" formControlName=\"workExperienceYearsTo\">\r\n        <div\r\n        *ngIf=\"filter.controls.workExperienceTo.get('workExperienceYearsTo').invalid \r\n          && filter.controls.workExperienceTo.get('workExperienceYearsTo').touched\"\r\n          class=\"validation\">\r\n        <small *ngIf=\"filter.controls.workExperienceTo.get('workExperienceYearsTo').errors.max\">\r\n          {{ 'FILTER.VALIDATORS.YEARS' | translate }}\r\n        </small>\r\n        <small *ngIf=\"filter.controls.workExperienceTo.get('workExperienceYearsTo').errors.min\">\r\n          {{ 'FILTER.VALIDATORS.POSITIVE' | translate }}\r\n        </small>\r\n        <small *ngIf=\"filter.controls.workExperienceTo.get('workExperienceYearsTo').errors.required\">\r\n          {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n      </div>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FILTER.MONTHS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"11\" name=\"workExperienceMonthsTo\" formControlName=\"workExperienceMonthsTo\">\r\n        <div\r\n        *ngIf=\"filter.controls.workExperienceTo.get('workExperienceMonthsTo').invalid \r\n          && filter.controls.workExperienceTo.get('workExperienceMonthsTo').touched\"\r\n        class=\"validation\">\r\n      <small *ngIf=\"filter.controls.workExperienceTo.get('workExperienceMonthsTo').errors.max\">\r\n        {{ 'FILTER.VALIDATORS.MONTHS' | translate }}\r\n      </small>\r\n      <small *ngIf=\"filter.controls.workExperienceTo.get('workExperienceMonthsTo').errors.min\">\r\n        {{ 'FILTER.VALIDATORS.POSITIVE' | translate }}\r\n      </small>\r\n      <small *ngIf=\"filter.controls.workExperienceTo.get('workExperienceMonthsTo').errors.required\">\r\n        {{ 'FILTER.VALIDATORS.REQUIRED' | translate }}\r\n      </small>\r\n    </div>\r\n      </div>\r\n    </div>\r\n\r\n      <button class=\"btn\" type=\"submit\" [disabled]=\"filter.invalid || filter.pending\">{{ 'FILTER.SUBMIT' | translate }}</button>\r\n    </form>\r\n  </div>  ","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomValidators } from '../core/validators/validator';\r\nimport { BodyService } from '../core/services/body.service';\r\nimport { FetchService } from '../core/services/fetch.service';\r\nimport { PatchService } from '../core/services/patch.service';\r\nimport { FormService } from '../core/services/form.service';\r\nimport { Form } from '../core/interfaces/form';\r\n\r\n@Component({\r\n  selector: 'app-form-update',\r\n  templateUrl: './form-update.component.html',\r\n  styleUrls: ['./form-update.component.scss'],\r\n  providers: [BodyService, FetchService, PatchService]\r\n})\r\nexport class FormUpdateComponent implements OnInit {\r\n  forms: Form[];\r\n  form: FormGroup;\r\n  date: Date;\r\n  id: number | undefined;\r\n\r\n  constructor(\r\n    private bodyService: BodyService,\r\n    private fetchService: FetchService,\r\n    private patchService: PatchService,\r\n    private formService: FormService) { }\r\n\r\n    ngOnInit(): void {\r\n      this.date = new Date();\r\n      this.form = new FormGroup({\r\n        name: new FormControl('', [\r\n          Validators.required,\r\n          CustomValidators.noWhitespace\r\n        ]),\r\n        surname: new FormControl('', [\r\n          Validators.required,\r\n          CustomValidators.noWhitespace\r\n        ]),\r\n        sex: new FormControl('male', ),\r\n        born: new FormControl('', [\r\n          Validators.required]),\r\n        height: new FormControl(0, [\r\n          Validators.min(30),\r\n          Validators.max(300),\r\n          Validators.required\r\n        ]),\r\n        phoneNumber: new FormControl('', [\r\n          Validators.required,\r\n          CustomValidators.noWhitespace\r\n        ]),\r\n        email: new FormControl('', [\r\n          Validators.email,\r\n          Validators.required]),\r\n        education: new FormControl('higher'),\r\n        prefferedRegion: new FormControl(''),\r\n        expectedSalary: new FormControl(0, [\r\n          Validators.min(1),\r\n        ]),\r\n        unemployedFor: new FormGroup({\r\n          unemployedForYears: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(100),\r\n            Validators.required\r\n          ]),\r\n          unemployedForMonths: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(11),\r\n            Validators.required\r\n          ])\r\n        }),\r\n        workExperience: new FormGroup({\r\n          workExperienceYears: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(100),\r\n            Validators.required\r\n          ]),\r\n          workExperienceMonths: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(11),\r\n            Validators.required\r\n          ]),\r\n        }),\r\n        note: new FormControl(''),\r\n        languageSkills: new FormGroup({\r\n          english: new FormControl(),\r\n          russian: new FormControl(),\r\n          englishProficiency: new FormControl('basic'),\r\n          russianProficiency: new FormControl('basic')\r\n        }),\r\n        professions: new FormGroup({\r\n          trainee: new FormControl(),\r\n          dealer: new FormControl(),\r\n          inspector: new FormControl(),\r\n          manager: new FormControl(),\r\n          pit_boss: new FormControl(),\r\n          waiter: new FormControl(),\r\n          barman: new FormControl(),\r\n        }),\r\n        messengers: new FormGroup({\r\n          WhatsApp: new FormControl(),\r\n          Telegram: new FormControl(),\r\n          Viber: new FormControl(),\r\n          msWhatsApp: new FormControl(),\r\n          msTelegram: new FormControl(),\r\n          msViber: new FormControl(),\r\n        })\r\n      });\r\n      this.formService.getForms().subscribe((forms) => {\r\n        this.forms = forms;\r\n      });\r\n      this.formService.getId().subscribe((id) => {\r\n        this.id = id;\r\n        if (id !== undefined) {\r\n          this.patchService.patchData(id, this.form, this.forms);\r\n        } else {\r\n          this.form.reset();\r\n        }\r\n      });\r\n    }\r\n\r\n    submit() {\r\n      if (this.form.valid) {\r\n        const formData = this.bodyService.convertFormData({...this.form.value});\r\n        formData.formid = this.forms[this.id].formid;\r\n        this.fetchService.updateForm(formData).subscribe((res) => {\r\n          this.forms[this.id] = res[0];\r\n          this.formService.setForms(this.forms);\r\n          this.formService.setId(this.id);\r\n        });\r\n        this.form.reset();\r\n      }\r\n    }\r\n}\r\n","<div class=\"container form-data\">\r\n    <h2>{{ 'FORM.TITLE' | translate }}</h2>\r\n        <hr>\r\n   <form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.NAME' | translate }}</label>\r\n      <input type=\"text\" name=\"name\" placeholder=\"Name\" formControlName=\"name\">\r\n      <div\r\n        *ngIf=\"form.get('name').invalid && form.get('name').touched\"\r\n        class=\"validation\">\r\n        <small *ngIf=\"form.get('name').errors\">\r\n          {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.SURNAME' | translate }}</label>\r\n      <input type=\"text\" name=\"surname\" placeholder=\"Surname\" formControlName=\"surname\">\r\n      <div\r\n        *ngIf=\"form.get('surname').invalid && form.get('surname').touched\"\r\n        class=\"validation\">\r\n        <small *ngIf=\"form.get('surname').errors\">\r\n          {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.SEX.TITLE' | translate }}</label>\r\n      <select name=\"sex\" formControlName=\"sex\">\r\n        <option value=\"male\">{{ 'FORM.SEX.MALE' | translate }}</option>\r\n        <option value=\"female\">{{ 'FORM.SEX.FEMALE' | translate }}</option>\r\n      </select>\r\n    </div>\r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.BORN' | translate }}</label>\r\n      <input type=\"date\" name=\"born\" max=\"{{date | date:'yyyy-MM-dd'}}\" formControlName=\"born\">\r\n      <div\r\n        *ngIf=\"form.get('born').invalid && form.get('born').touched\"\r\n        class=\"validation\">\r\n        <small *ngIf=\"form.get('born').errors.required\">\r\n          {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n    </div>   \r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.HEIGHT.TITLE' | translate }}</label>\r\n      <input type=\"number\"  name=\"height\" min=\"30\" max=\"300\" formControlName=\"height\">\r\n      <div\r\n        *ngIf=\"form.get('height').invalid && form.get('height').touched\"\r\n        class=\"validation\">\r\n        <small *ngIf=\"form.get('height').errors.min\">\r\n          {{ 'FORM.HEIGHT.MIN' | translate }}\r\n        </small>\r\n        <small *ngIf=\"form.get('height').errors.max\">\r\n          {{ 'FORM.HEIGHT.MAX' | translate }}\r\n        </small>\r\n        <small *ngIf=\"form.get('height').errors.required\">\r\n          {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.PHONE_NUMBER' | translate }}</label>\r\n      <input type=\"text\" name=\"phoneNumber\" formControlName=\"phoneNumber\">\r\n      <div\r\n        *ngIf=\"form.get('phoneNumber').invalid && form.get('phoneNumber').touched\"\r\n        class=\"validation\">\r\n        <small *ngIf=\"form.get('phoneNumber').errors\">\r\n          {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n    </div>\r\n     \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.EMAIL' | translate }}</label>\r\n      <input type=\"text\" name=\"email\" placeholder=\"Email\" formControlName=\"email\">\r\n      <div\r\n        *ngIf=\"form.get('email').invalid && form.get('email').touched\"\r\n        class=\"validation\">\r\n        <small *ngIf=\"form.get('email').errors.required\">\r\n          {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n        <small *ngIf=\"form.get('email').errors.email\">\r\n          {{ 'FORM.VALIDATORS.EMAIL' | translate }}\r\n        </small>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.EDUCATION.TITLE' | translate }}</label>\r\n      <select name=\"education\" formControlName=\"education\">\r\n        <option value=\"primary\">{{ 'FORM.EDUCATION.PRIMARY' | translate }}</option>\r\n        <option value=\"secondary\">{{ 'FORM.EDUCATION.SECONDARY' | translate }}</option>\r\n        <option value=\"unfinished_higher\">{{ 'FORM.EDUCATION.UNFINISHED_HIGHER' | translate }}</option>\r\n        <option value=\"higher\">{{ 'FORM.EDUCATION.HIGHER' | translate }}</option>\r\n      </select>\r\n    </div>\r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.EXPECTED_SALARY' | translate }}</label>\r\n      <input type=\"number\" name=\"expectedSalary\" min=\"1\" formControlName=\"expectedSalary\">\r\n      <div\r\n        *ngIf=\"form.get('expectedSalary').invalid && form.get('expectedSalary').touched\"\r\n        class=\"validation\">\r\n        <small *ngIf=\"form.get('expectedSalary').errors.min\">\r\n          {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n        </small>\r\n        <small *ngIf=\"form.get('expectedSalary').errors.required\">\r\n          {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n        </small>\r\n      </div>\r\n    </div> \r\n   \r\n    <div class=\"form-control\">\r\n      <label>{{ 'FORM.PREFFERED_REGION' | translate }}</label>\r\n      <input type=\"text\" name=\"prefferedRegion\" formControlName=\"prefferedRegion\">\r\n    </div>\r\n   \r\n    <div class=\"card\" formGroupName=\"workExperience\">\r\n      <label>{{ 'FORM.WORK_EXPERIENCE' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FORM.YEARS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"100\" name=\"workExperienceYears\" formControlName=\"workExperienceYears\">\r\n        <div\r\n          *ngIf=\"form.controls.workExperience.get('workExperienceYears').invalid \r\n            && form.controls.workExperience.get('workExperienceYears').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"form.controls.workExperience.get('workExperienceYears').errors.max\">\r\n            {{ 'FORM.VALIDATORS.YEARS' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.workExperience.get('workExperienceYears').errors.min\">\r\n            {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.workExperience.get('workExperienceYears').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FORM.MONTHS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"11\" name=\"workExperienceMonths\" formControlName=\"workExperienceMonths\">\r\n        <div\r\n            *ngIf=\"form.controls.workExperience.get('workExperienceMonths').invalid \r\n              && form.controls.workExperience.get('workExperienceMonths').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"form.controls.workExperience.get('workExperienceMonths').errors.max\">\r\n            {{ 'FORM.VALIDATORS.MONTHS' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.workExperience.get('workExperienceMonths').errors.min\">\r\n            {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.workExperience.get('workExperienceMonths').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   \r\n     <div class=\"card\" formGroupName=\"unemployedFor\">\r\n      <label>{{ 'FORM.UNEMPLOYED_FOR' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FORM.YEARS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"100\" name=\"unemployedForYears\" formControlName=\"unemployedForYears\">\r\n          <div\r\n          *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').invalid \r\n            && form.controls.unemployedFor.get('unemployedForYears').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').errors.max\">\r\n            {{ 'FORM.VALIDATORS.YEARS' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').errors.min\">\r\n            {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-control\">\r\n        <label><h5>{{ 'FORM.MONTHS' | translate }}</h5></label>\r\n        <input type=\"number\" min=\"0\" max=\"11\" name=\"unemployedForMonths\" formControlName=\"unemployedForMonths\">\r\n        <div\r\n            *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').invalid \r\n              && form.controls.unemployedFor.get('unemployedForMonths').touched\"\r\n            class=\"validation\">\r\n          <small *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').errors.max\">\r\n            {{ 'FORM.VALIDATORS.MONTHS' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').errors.min\">\r\n            {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"card\" formGroupName=\"languageSkills\">\r\n      <label>{{ 'FORM.LANGUAGE_SKILLS' | translate }}</label>\r\n   \r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"english\" formControlName=\"english\">{{ 'FORM.LANGUAGES.ENGLISH' | translate }}</label>\r\n        <select name=\"englishProficiency\" formControlName=\"englishProficiency\">\r\n          <option value=\"basic\">{{ 'FORM.LANGUAGE_PROFICIENCY.BASIC' | translate }}</option>\r\n          <option value=\"intermediate\">{{ 'FORM.LANGUAGE_PROFICIENCY.INTERMEDIATE' | translate }}</option>\r\n          <option value=\"fluent\">{{ 'FORM.LANGUAGE_PROFICIENCY.FLUENT' | translate }}</option>\r\n          <option value=\"native\">{{ 'FORM.LANGUAGE_PROFICIENCY.NATIVE' | translate }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"russian\" formControlName=\"russian\">{{ 'FORM.LANGUAGES.RUSSIAN' | translate }}</label>\r\n        <select name=\"russianProficiency\" formControlName=\"russianProficiency\">\r\n          <option value=\"basic\">{{ 'FORM.LANGUAGE_PROFICIENCY.BASIC' | translate }}</option>\r\n          <option value=\"intermediate\">{{ 'FORM.LANGUAGE_PROFICIENCY.INTERMEDIATE' | translate }}</option>\r\n          <option value=\"fluent\">{{ 'FORM.LANGUAGE_PROFICIENCY.FLUENT' | translate }}</option>\r\n          <option value=\"native\">{{ 'FORM.LANGUAGE_PROFICIENCY.NATIVE' | translate }}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"card\" formGroupName=\"professions\">\r\n      <label>{{ 'FORM.PROFESSIONS.TITLE' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"trainee\" formControlName=\"trainee\">{{ 'FORM.PROFESSIONS.TRAINEE' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"dealer\" formControlName=\"dealer\">{{ 'FORM.PROFESSIONS.DEALER' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"inspector\" formControlName=\"inspector\">{{ 'FORM.PROFESSIONS.INSPECTOR' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"manager\" formControlName=\"manager\">{{ 'FORM.PROFESSIONS.MANAGER' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"pit_boss\" formControlName=\"pit_boss\">{{ 'FORM.PROFESSIONS.PIT_BOSS' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"waiter\" formControlName=\"waiter\">{{ 'FORM.PROFESSIONS.WAITER' | translate }}</label>\r\n        <label><input type=\"checkbox\" name=\"barman\" formControlName=\"barman\">{{ 'FORM.PROFESSIONS.BARMAN' | translate }}</label>\r\n      </div>\r\n    </div>\r\n   \r\n    <div class=\"card\" formGroupName=\"messengers\">\r\n      <label>{{ 'FORM.MESSENGERS.TITLE' | translate }}</label>\r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"Telegram\" formControlName=\"msTelegram\">{{ 'FORM.MESSENGERS.TELEGRAM' | translate }}</label>\r\n        <input type=\"text\" name=\"Telegram\" formControlName=\"Telegram\">\r\n      </div>\r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"msWhatsApp\" formControlName=\"msWhatsApp\">{{ 'FORM.MESSENGERS.WHATS_APP' | translate }}</label>\r\n        <input type=\"text\" name=\"WhatsApp\" formControlName=\"WhatsApp\">\r\n      </div>\r\n      <div class=\"form-control\">\r\n        <label><input type=\"checkbox\" name=\"msViber\" formControlName=\"msViber\">{{ 'FORM.MESSENGERS.VIBER' | translate }}</label>\r\n        <input type=\"text\" name=\"Viber\" formControlName=\"Viber\">\r\n      </div>\r\n    </div>\r\n   \r\n    <textarea rows=\"5\" name=\"note\" placeholder=\"Note...\" formControlName=\"note\"></textarea>\r\n   \r\n    <button class=\"btn\" type=\"submit\" [disabled]=\"form.invalid || form.pending\">{{ 'FORM.SUBMIT' | translate }}</button>\r\n  </form>\r\n  <app-comment></app-comment>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { CustomValidators } from '../core/validators/validator';\r\nimport { BodyService } from '../core/services/body.service';\r\nimport { FetchService } from '../core/services/fetch.service';\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styles: ['./form.component.scss'],\r\n  providers: [BodyService, FetchService]\r\n})\r\nexport class FormComponent implements OnInit {\r\n    constructor(\r\n      private bodyService: BodyService,\r\n      private fetchService: FetchService) { }\r\n    form: FormGroup;\r\n    date: Date;\r\n\r\n    ngOnInit() {\r\n      this.date = new Date();\r\n      this.form = new FormGroup({\r\n        name: new FormControl('', [\r\n          Validators.required,\r\n          CustomValidators.noWhitespace\r\n        ]),\r\n        surname: new FormControl('', [\r\n          Validators.required,\r\n          CustomValidators.noWhitespace\r\n        ]),\r\n        sex: new FormControl('male', ),\r\n        born: new FormControl('', [\r\n          Validators.required]),\r\n        height: new FormControl(0, [\r\n          Validators.min(30),\r\n          Validators.max(300),\r\n          Validators.required\r\n        ]),\r\n        phoneNumber: new FormControl('', [\r\n          Validators.required,\r\n          CustomValidators.noWhitespace\r\n        ]),\r\n        email: new FormControl('', [\r\n          Validators.email,\r\n          Validators.required]),\r\n        education: new FormControl('higher'),\r\n        prefferedRegion: new FormControl(''),\r\n        expectedSalary: new FormControl(0, [\r\n          Validators.min(1),\r\n          Validators.required\r\n        ]),\r\n        unemployedFor: new FormGroup({\r\n          unemployedForYears: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(100),\r\n            Validators.required\r\n          ]),\r\n          unemployedForMonths: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(11),\r\n            Validators.required\r\n          ])\r\n        }),\r\n        workExperience: new FormGroup({\r\n          workExperienceYears: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(100),\r\n            Validators.required\r\n          ]),\r\n          workExperienceMonths: new FormControl(0, [\r\n            Validators.min(0),\r\n            Validators.max(11),\r\n            Validators.required\r\n          ]),\r\n        }),\r\n        note: new FormControl(''),\r\n        languageSkills: new FormGroup({\r\n          english: new FormControl(),\r\n          russian: new FormControl(),\r\n          englishProficiency: new FormControl('basic'),\r\n          russianProficiency: new FormControl('basic')\r\n        }),\r\n        professions: new FormGroup({\r\n          trainee: new FormControl(),\r\n          dealer: new FormControl(),\r\n          inspector: new FormControl(),\r\n          manager: new FormControl(),\r\n          pit_boss: new FormControl(),\r\n          waiter: new FormControl(),\r\n          barman: new FormControl(),\r\n        }),\r\n        messengers: new FormGroup({\r\n          WhatsApp: new FormControl(),\r\n          Telegram: new FormControl(),\r\n          Viber: new FormControl(),\r\n          msWhatsApp: new FormControl(),\r\n          msTelegram: new FormControl(),\r\n          msViber: new FormControl(),\r\n        })\r\n      });\r\n    }\r\n\r\n    submit() {\r\n      if (this.form.valid) {\r\n        const formData = this.bodyService.convertFormData({...this.form.value});\r\n        this.fetchService.addForm(formData).subscribe();\r\n        this.form.reset();\r\n      }\r\n    }\r\n  }\r\n","<div class=\"container\">\r\n    <form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n       <h1>{{ 'FORM.TITLE' | translate }}</h1>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.NAME' | translate }}</label>\r\n        <input type=\"text\" name=\"name\" placeholder=\"Name\" formControlName=\"name\">\r\n        <div\r\n          *ngIf=\"form.get('name').invalid && form.get('name').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('name').errors\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.SURNAME' | translate }}</label>\r\n        <input type=\"text\" name=\"surname\" placeholder=\"Surname\" formControlName=\"surname\">\r\n        <div\r\n          *ngIf=\"form.get('surname').invalid && form.get('surname').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('surname').errors\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.SEX.TITLE' | translate }}</label>\r\n        <select name=\"sex\" formControlName=\"sex\">\r\n          <option value=\"male\">{{ 'FORM.SEX.MALE' | translate }}</option>\r\n          <option value=\"female\">{{ 'FORM.SEX.FEMALE' | translate }}</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.BORN' | translate }}</label>\r\n        <input type=\"date\" name=\"born\" max=\"{{date | date:'yyyy-MM-dd'}}\" formControlName=\"born\">\r\n        <div\r\n          *ngIf=\"form.get('born').invalid && form.get('born').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('born').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>   \r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.HEIGHT.TITLE' | translate }}</label>\r\n        <input type=\"number\"  name=\"height\" min=\"30\" max=\"300\" formControlName=\"height\">\r\n        <div\r\n          *ngIf=\"form.get('height').invalid && form.get('height').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('height').errors.min\">\r\n            {{ 'FORM.HEIGHT.MIN' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('height').errors.max\">\r\n            {{ 'FORM.HEIGHT.MAX' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('height').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.PHONE_NUMBER' | translate }}</label>\r\n        <input type=\"text\" name=\"phoneNumber\" formControlName=\"phoneNumber\">\r\n        <div\r\n          *ngIf=\"form.get('phoneNumber').invalid && form.get('phoneNumber').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('phoneNumber').errors\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.EMAIL' | translate }}</label>\r\n        <input type=\"text\" name=\"email\" placeholder=\"Email\" formControlName=\"email\">\r\n        <div\r\n          *ngIf=\"form.get('email').invalid && form.get('email').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('email').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('email').errors.email\">\r\n            {{ 'FORM.VALIDATORS.EMAIL' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.EDUCATION.TITLE' | translate }}</label>\r\n        <select name=\"education\" formControlName=\"education\">\r\n          <option value=\"primary\">{{ 'FORM.EDUCATION.PRIMARY' | translate }}</option>\r\n          <option value=\"secondary\">{{ 'FORM.EDUCATION.SECONDARY' | translate }}</option>\r\n          <option value=\"unfinished_higher\">{{ 'FORM.EDUCATION.UNFINISHED_HIGHER' | translate }}</option>\r\n          <option value=\"higher\">{{ 'FORM.EDUCATION.HIGHER' | translate }}</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.EXPECTED_SALARY' | translate }}</label>\r\n        <input type=\"number\" name=\"expectedSalary\" min=\"1\" formControlName=\"expectedSalary\">\r\n        <div\r\n          *ngIf=\"form.get('expectedSalary').invalid && form.get('expectedSalary').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('expectedSalary').errors.min\">\r\n            {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('expectedSalary').errors.required\">\r\n            {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n          </small>\r\n        </div>\r\n      </div> \r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'FORM.PREFFERED_REGION' | translate }}</label>\r\n        <input type=\"text\" name=\"prefferedRegion\" formControlName=\"prefferedRegion\">\r\n      </div>\r\n\r\n      <div class=\"card\" formGroupName=\"workExperience\">\r\n        <label>{{ 'FORM.WORK_EXPERIENCE' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FORM.YEARS' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"0\" max=\"100\" name=\"workExperienceYears\" formControlName=\"workExperienceYears\">\r\n          <div\r\n            *ngIf=\"form.controls.workExperience.get('workExperienceYears').invalid \r\n              && form.controls.workExperience.get('workExperienceYears').touched\"\r\n              class=\"validation\">\r\n            <small *ngIf=\"form.controls.workExperience.get('workExperienceYears').errors.max\">\r\n              {{ 'FORM.VALIDATORS.YEARS' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.workExperience.get('workExperienceYears').errors.min\">\r\n              {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.workExperience.get('workExperienceYears').errors.required\">\r\n              {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n            </small>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FORM.MONTHS' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"0\" max=\"11\" name=\"workExperienceMonths\" formControlName=\"workExperienceMonths\">\r\n          <div\r\n              *ngIf=\"form.controls.workExperience.get('workExperienceMonths').invalid \r\n                && form.controls.workExperience.get('workExperienceMonths').touched\"\r\n              class=\"validation\">\r\n            <small *ngIf=\"form.controls.workExperience.get('workExperienceMonths').errors.max\">\r\n              {{ 'FORM.VALIDATORS.MONTHS' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.workExperience.get('workExperienceMonths').errors.min\">\r\n              {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.workExperience.get('workExperienceMonths').errors.required\">\r\n              {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n       <div class=\"card\" formGroupName=\"unemployedFor\">\r\n        <label>{{ 'FORM.UNEMPLOYED_FOR' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FORM.YEARS' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"0\" max=\"100\" name=\"unemployedForYears\" formControlName=\"unemployedForYears\">\r\n            <div\r\n            *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').invalid \r\n              && form.controls.unemployedFor.get('unemployedForYears').touched\"\r\n              class=\"validation\">\r\n            <small *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').errors.max\">\r\n              {{ 'FORM.VALIDATORS.YEARS' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').errors.min\">\r\n              {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.unemployedFor.get('unemployedForYears').errors.required\">\r\n              {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n            </small>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><h5>{{ 'FORM.MONTHS' | translate }}</h5></label>\r\n          <input type=\"number\" min=\"0\" max=\"11\" name=\"unemployedForMonths\" formControlName=\"unemployedForMonths\">\r\n          <div\r\n              *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').invalid \r\n                && form.controls.unemployedFor.get('unemployedForMonths').touched\"\r\n              class=\"validation\">\r\n            <small *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').errors.max\">\r\n              {{ 'FORM.VALIDATORS.MONTHS' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').errors.min\">\r\n              {{ 'FORM.VALIDATORS.POSITIVE' | translate }}\r\n            </small>\r\n            <small *ngIf=\"form.controls.unemployedFor.get('unemployedForMonths').errors.required\">\r\n              {{ 'FORM.VALIDATORS.REQUIRED' | translate }}\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\" formGroupName=\"languageSkills\">\r\n        <label>{{ 'FORM.LANGUAGE_SKILLS' | translate }}</label>\r\n\r\n        <div class=\"form-control\">\r\n          <label><input type=\"checkbox\" name=\"english\" formControlName=\"english\">{{ 'FORM.LANGUAGES.ENGLISH' | translate }}</label>\r\n          <select name=\"englishProficiency\" formControlName=\"englishProficiency\">\r\n            <option value=\"basic\">{{ 'FORM.LANGUAGE_PROFICIENCY.BASIC' | translate }}</option>\r\n            <option value=\"intermediate\">{{ 'FORM.LANGUAGE_PROFICIENCY.INTERMEDIATE' | translate }}</option>\r\n            <option value=\"fluent\">{{ 'FORM.LANGUAGE_PROFICIENCY.FLUENT' | translate }}</option>\r\n            <option value=\"native\">{{ 'FORM.LANGUAGE_PROFICIENCY.NATIVE' | translate }}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><input type=\"checkbox\" name=\"russian\" formControlName=\"russian\">{{ 'FORM.LANGUAGES.RUSSIAN' | translate }}</label>\r\n          <select name=\"russianProficiency\" formControlName=\"russianProficiency\">\r\n            <option value=\"basic\">{{ 'FORM.LANGUAGE_PROFICIENCY.BASIC' | translate }}</option>\r\n            <option value=\"intermediate\">{{ 'FORM.LANGUAGE_PROFICIENCY.INTERMEDIATE' | translate }}</option>\r\n            <option value=\"fluent\">{{ 'FORM.LANGUAGE_PROFICIENCY.FLUENT' | translate }}</option>\r\n            <option value=\"native\">{{ 'FORM.LANGUAGE_PROFICIENCY.NATIVE' | translate }}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\" formGroupName=\"professions\">\r\n        <label>{{ 'FORM.PROFESSIONS.TITLE' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <label><input type=\"checkbox\" name=\"trainee\" formControlName=\"trainee\">{{ 'FORM.PROFESSIONS.TRAINEE' | translate }}</label>\r\n          <label><input type=\"checkbox\" name=\"dealer\" formControlName=\"dealer\">{{ 'FORM.PROFESSIONS.DEALER' | translate }}</label>\r\n          <label><input type=\"checkbox\" name=\"inspector\" formControlName=\"inspector\">{{ 'FORM.PROFESSIONS.INSPECTOR' | translate }}</label>\r\n          <label><input type=\"checkbox\" name=\"manager\" formControlName=\"manager\">{{ 'FORM.PROFESSIONS.MANAGER' | translate }}</label>\r\n          <label><input type=\"checkbox\" name=\"pit_boss\" formControlName=\"pit_boss\">{{ 'FORM.PROFESSIONS.PIT_BOSS' | translate }}</label>\r\n          <label><input type=\"checkbox\" name=\"waiter\" formControlName=\"waiter\">{{ 'FORM.PROFESSIONS.WAITER' | translate }}</label>\r\n          <label><input type=\"checkbox\" name=\"barman\" formControlName=\"barman\">{{ 'FORM.PROFESSIONS.BARMAN' | translate }}</label>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card\" formGroupName=\"messengers\">\r\n        <label>{{ 'FORM.MESSENGERS.TITLE' | translate }}</label>\r\n        <div class=\"form-control\">\r\n          <label><input type=\"checkbox\" name=\"Telegram\" formControlName=\"msTelegram\">{{ 'FORM.MESSENGERS.TELEGRAM' | translate }}</label>\r\n          <input type=\"text\" name=\"Telegram\" formControlName=\"Telegram\">\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><input type=\"checkbox\" name=\"msWhatsApp\" formControlName=\"msWhatsApp\">{{ 'FORM.MESSENGERS.WHATS_APP' | translate }}</label>\r\n          <input type=\"text\" name=\"WhatsApp\" formControlName=\"WhatsApp\">\r\n        </div>\r\n        <div class=\"form-control\">\r\n          <label><input type=\"checkbox\" name=\"msViber\" formControlName=\"msViber\">{{ 'FORM.MESSENGERS.VIBER' | translate }}</label>\r\n          <input type=\"text\" name=\"Viber\" formControlName=\"Viber\">\r\n        </div>\r\n      </div>\r\n\r\n      <textarea rows=\"5\" name=\"note\" placeholder=\"Note...\" formControlName=\"note\"></textarea>\r\n\r\n      <button class=\"btn\" type=\"submit\" [disabled]=\"form.invalid || form.pending\">{{ 'FORM.SUBMIT' | translate }}</button>\r\n    </form>\r\n  </div>\r\n  \r\n  \r\n  \r\n  ","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Form } from '../core/interfaces/form';\r\nimport { FetchService } from '../core/services/fetch.service';\r\nimport { FormService } from '../core/services/form.service';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  providers: [FetchService],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ListComponent implements OnInit {\r\n  forms: Form[] = [];\r\n\r\n  constructor(\r\n    private fetchService: FetchService,\r\n    private formService: FormService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getFormsFromServer();\r\n    this.setThisForms();\r\n  }\r\n\r\n  getFormsFromServer(): void {\r\n    this.fetchService.getForms().subscribe(forms => {\r\n      this.formService.setForms(forms);\r\n      });\r\n    this.selectForm(1);\r\n    }\r\n\r\n  setThisForms(): void {\r\n    this.formService.getForms().subscribe((forms) => {\r\n      this.forms = forms;\r\n    });\r\n  }\r\n\r\n  selectForm(id) {\r\n    if (this.forms[id]) {\r\n      this.formService.setId(id);\r\n    } else {\r\n      this.formService.setId(undefined);\r\n    }\r\n  }\r\n\r\n  delete(id: number): void {\r\n    this.fetchService\r\n        .deleteForm(id)\r\n        .subscribe();\r\n  }\r\n\r\n  deleteItem(id: number) {\r\n    this.delete(id);\r\n    this.getFormsFromServer();\r\n    this.selectForm(1);\r\n  }\r\n\r\n}\r\n","<div class=\"container list\">\r\n    <h2>{{ 'LIST' | translate }}</h2>\r\n    <hr>\r\n    <div class=\"card\" *ngFor=\"let form of forms; let i = index\" #el [attr.id]=\"form.formid\" (click)=selectForm(i)>\r\n      <p>\r\n        <span class=\"name\">{{form.name}} {{form.surname}}</span>\r\n        <span>\r\n          <button class=\"btn btn-danger\" (click)=deleteItem(el.id)>✖</button>\r\n        </span>\r\n      </p>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../core/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { CustomValidators } from '../core/validators/validator';\r\nimport { UserInfo } from '../core/auth/interfaces/userInfo';\r\nimport { User } from '../core/auth/interfaces/user';\r\nimport { UserService } from '../core/auth/user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  providers: [AuthService]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private router: Router\r\n    ) { }\r\n  form: FormGroup;\r\n  error: string;\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      username: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(2),\r\n        Validators.maxLength(50),\r\n        CustomValidators.noWhitespace\r\n      ]),\r\n      password: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(25),\r\n        CustomValidators.noWhitespace\r\n        ])\r\n      });\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.valid) {\r\n    const user: User = {...this.form.value};\r\n    this.authService.login(user)\r\n    .subscribe(\r\n      (res: UserInfo) => {\r\n      this.error = '';\r\n      localStorage.setItem('jwt', res.token);\r\n      localStorage.setItem('username', res.username);\r\n      localStorage.setItem('userid', res.userid.toString());\r\n      this.router.navigate(['/view']);\r\n      },\r\n      (err) => {\r\n        this.error = err.error.text;\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n       <h1>{{ 'LOGIN.TITLE' | translate }}</h1>\r\n\r\n       <div class=\"form-control\">\r\n        <label>{{ 'LOGIN.USERNAME.TITLE' | translate }}</label>\r\n        <input type=\"text\" name=\"username\" placeholder=\"Username\" formControlName=\"username\">\r\n        <div\r\n          *ngIf=\"form.get('username').invalid && form.get('username').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('username').errors.required || form.get('username').errors.whitespace\">\r\n            {{ 'LOGIN.USERNAME.REQUIRED' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('username').errors.minlength\">\r\n            {{ 'LOGIN.USERNAME.MIN_LENGTH' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('username').errors.maxlength\">\r\n            {{ 'LOGIN.USERNAME.MAX_LENGTH' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-control\">\r\n        <label>{{ 'LOGIN.PASSWORD.TITLE' | translate }}</label>\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" formControlName=\"password\">\r\n        <div\r\n          *ngIf=\"form.get('password').invalid && form.get('password').touched\"\r\n          class=\"validation\">\r\n          <small *ngIf=\"form.get('password').errors.required || form.get('password').errors.whitespace\">\r\n            {{ 'LOGIN.PASSWORD.REQUIRED' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('password').errors.minlength\">\r\n            {{ 'LOGIN.PASSWORD.MIN_LENGTH' | translate }}\r\n          </small>\r\n          <small *ngIf=\"form.get('password').errors.maxlength\">\r\n            {{ 'LOGIN.PASSWORD.MAX_LENGTH' | translate }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <p *ngIf=\"error\" class=\"error\">{{error}}</p>\r\n\r\n      <button class=\"btn\" type=\"submit\" [disabled]=\"form.invalid || form.pending\">{{ 'LOGIN.SUBMIT' | translate }}</button>\r\n    </form>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-view',\r\n  templateUrl: './view.component.html',\r\n  styleUrls: ['./view.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ViewComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n}\r\n","<div class=\"grid-container\">\r\n  <app-filter></app-filter>\r\n  <app-list></app-list>\r\n  <app-form-update></app-form-update>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}